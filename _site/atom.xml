<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="//assets/xslt/atom.xslt" ?>
<?xml-stylesheet type="text/css" href="//assets/css/atom.css" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
	<id>http://localhost:4000//</id>
	<title>Kimberly Fessel Blog</title>
	<updated>2020-06-05T18:40:45-04:00</updated>

	<subtitle>Kimberly Fessel is a Senior Data Scientist at Metis. Her enthusiasm for data storytelling often leads her toward better math, better visuals, and better science!</subtitle>

	
		
		<author>
			
				<name>Kimberly Fessel</name>
			
			
			
		</author>
	

	<link href="http://localhost:4000//atom.xml" rel="self" type="application/rss+xml" />
	<link href="http://localhost:4000//" rel="alternate" type="text/html" />

	<generator uri="http://jekyllrb.com" version="3.3.1">Jekyll</generator>

	
		<entry>
			<id>http://localhost:4000//mathematics/applications/gini-use-cases/</id>
			<title>Measuring Statistical Dispersion with the Gini Coefficient</title>
			<link href="http://localhost:4000//mathematics/applications/gini-use-cases/" rel="alternate" type="text/html" title="Measuring Statistical Dispersion with the Gini Coefficient" />
			<updated>2020-06-05T00:00:00-04:00</updated>

			
				
				<author>
					
						<name>KFessel</name>
					
					
					
				</author>
			
			<summary>&lt;em&gt;The Gini coefficient is a good general-purpose measure of statistical dispersion.  Long since popular in the field of economics, this metric can be leveraged much more broadly to explore data from nearly any discipline. The following post includes a thorough mathematical explanation of the Gini coefficient as well as a few non-standard use cases.&lt;/em&gt;</summary>
			<content type="html" xml:base="http://localhost:4000//mathematics/applications/gini-use-cases/">&lt;hr /&gt;

&lt;p&gt;If you work with data long enough, you are bound to discover that a dataset’s mean rarely–if ever–tells you the full data story.  As a simple example, each of the following groups of people have the same &lt;strong&gt;average pay&lt;/strong&gt; of $100:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;100 people who make $100 each&lt;/li&gt;
  &lt;li&gt;50 people who make $150 each and 50 people who make $50&lt;/li&gt;
  &lt;li&gt;1 person who makes $10,000 and 99 people who make nothing&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The primary difference, of course, is the way that money is distributed among the people, also known as the &lt;a href=&quot;https://en.wikipedia.org/wiki/Statistical_dispersion&quot;&gt;statistical dispersion&lt;/a&gt;.  Perhaps the most popular measurement of statistical dispersion is standard deviation or variance; however, you can leverage other metrics, such as the Gini coefficient, to obtain a new perspective.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Gini_coefficient&quot;&gt;The Gini coefficient&lt;/a&gt;, also known as the Gini index or the Gini ratio, was introduced in 1912 by Italian statistician and sociologist Corrado Gini.  Analysts have historically used this value to study income or wealth distributions; in fact, despite being developed over 100 years ago, &lt;a href=&quot;https://www.bbc.com/news/blogs-magazine-monitor-31847943&quot;&gt;the United Nations still uses the Gini coefficient&lt;/a&gt; to understand monetary inequities in their annual ranking of nations. But the Gini coefficient may be utilized much more broadly! After a more thorough mathematical explanation, let’s apply the Gini coefficient to a few non-standard use cases that do not involve international economies.&lt;/p&gt;

&lt;h2 id=&quot;defining-gini&quot;&gt;Defining Gini&lt;/h2&gt;

&lt;p&gt;The first step in understanding the Gini coefficient requires a discussion about the Lorenz curve, a graph developed by Max Lorenz for visualizing income or wealth distribution.  To trace out the Lorenz curve, begin by taking the incomes of a population and sorting them from smallest to largest.  Then build a line plot where the \(x\)-values represent the percentage of people seen thus far and the \(y\)-values represent the cumulative proportion of wealth attributed to this percentage of people.  For example, if the poorest 30% of the population holds 10% of a population’s wealth, the curve should pass through the scaled \(x,y\) coordinates (0.3, 0.1).  Note also that if wealth is distributed evenly among all members of a population, the Lorenz curve follows a straight line, \(x=y\).  See the figure below for an illustration of a hypothetical Lorenz curve along with the line of equality.&lt;/p&gt;

&lt;div class=&quot;row&quot;&gt;
  &lt;div class=&quot;large-6 columns&quot;&gt;
      &lt;img src=&quot;https://kimfetti.github.io/images/gini_explanation.png&quot; alt=&quot;The areas surrounding the Lorenz curve define the Gini coefficient: A/(A+B)&quot; width=&quot;350&quot; /&gt;
  &lt;/div&gt;
  &lt;div class=&quot;large-6 columns&quot;&gt;
      &lt;img src=&quot;https://kimfetti.github.io/images/gini_animation.gif&quot; alt=&quot;The Gini coefficient increases as the inequity gap widens.&quot; width=&quot;350&quot; /&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;The Gini coefficient measures how much a population’s Lorenz curve deviates from perfect equality or how much a set of data diverges from equal values.  The Gini coefficient typically ranges from zero to one&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;, where&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;zero represents perfect equality &lt;em&gt;(e.g. everyone has an equal amount)&lt;/em&gt; and&lt;/li&gt;
  &lt;li&gt;one represents near perfect inequality &lt;em&gt;(e.g. one person has all the money)&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For all situations in between, the Gini coefficient \(G\) is defined as
\[G = \frac{A}{A + B}\]
where \(A\) signifies the region enclosed between the line of perfect equality and the Lorenz curve, as indicated in the figure above, while \(A + B\) represents the total triangular area.&lt;/p&gt;

&lt;p&gt;Each of the three situations discussed in the introduction produce an average of $100 per person. The Gini coefficient, however, varies greatly for each scenario as seen in the figure below.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://kimfetti.github.io/images/gini_compare.png&quot; alt=&quot;Gini coefficient increases with wealth inequity.&quot; width=&quot;1000&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;gini-in-python&quot;&gt;Gini in Python&lt;/h2&gt;

&lt;p&gt;To calculate a dataset’s Gini coefficient with Python, you have the option of computing the shaded area \(A\) with something like &lt;code class=&quot;highlighter-rouge&quot;&gt;scipy&lt;/code&gt;’s &lt;a href=&quot;https://docs.scipy.org/doc/scipy/reference/generated/scipy.integrate.quad.html&quot;&gt;quadrature&lt;/a&gt; routine.  If this style of numerical integration proves slow or too complicated for applications at scale, you can utilize an alternative, &lt;a href=&quot;https://en.wikipedia.org/wiki/Gini_coefficient#Definition&quot;&gt;equivalent definition of the Gini coefficient&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;The Gini coefficient may also be expressed as half of the data’s &lt;a href=&quot;https://en.wikipedia.org/wiki/Mean_absolute_difference#Relative_mean_absolute_difference&quot;&gt;relative mean absolute difference&lt;/a&gt;, a normalized form of the average absolute difference among all pairs of observations in the dataset. 
\[ G = \frac{\sum\limits_i \sum\limits_j |x_i - x_j|}{2\sum\limits_i\sum\limits_j x_j}\]&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The calculation simplifies further if the data consist of only positive values as it becomes &lt;a href=&quot;https://www.statsdirect.com/help/default.htm#nonparametric_methods/gini.htm&quot;&gt;unnecessary to evaluate all possible pairs&lt;/a&gt;.  Sorting the datapoints in ascending order and assigning a positional index \(i\) yields
\[G = \frac{\sum\limits_i (2i - n - 1)x_i}{n\sum\limits_i x_i}, \]
which is even speedier to compute.&lt;/p&gt;

&lt;p&gt;The best Python implementation of the Gini coefficient that I’ve found comes from &lt;a href=&quot;https://github.com/oliviaguest/gini/blob/master/gini.py&quot;&gt;Olivia Guest&lt;/a&gt;. I will subsequently leverage her vectorized &lt;code class=&quot;highlighter-rouge&quot;&gt;numpy&lt;/code&gt; routine to calculate Gini in the case studies that follow.&lt;/p&gt;

&lt;h2 id=&quot;case-1-baby-names&quot;&gt;Case #1: Baby Names&lt;/h2&gt;

&lt;p&gt;So far we have mostly addressed the Gini coefficient in the context of its original field of economics.  This metric generalizes, however, to provide insight whenever statistical dispersion plays a critical role.  I will now illustrate two atypical applications to demonstrate how using the Gini coefficient augments the workflow of exploratory data analysis.&lt;/p&gt;

&lt;p&gt;The Social Security Administration of the United States (SSA) &lt;a href=&quot;https://www.ssa.gov/oact/babynames/limits.html&quot;&gt;hosts public records&lt;/a&gt; on the names given to US babies for research purposes.  Aggregating these data for children born since 1950, I discovered that 18 out of the top 20 most popular names more commonly associate with male children.  So where are the females?&lt;/p&gt;

&lt;center&gt;
&lt;img src=&quot;https://kimfetti.github.io/images/popular_names.png&quot; alt=&quot;Most popular names given to US babies since 1950&quot; width=&quot;500&quot; /&gt;
&lt;/center&gt;

&lt;p&gt;Slightly &lt;a href=&quot;https://www.npr.org/sections/health-shots/2015/03/30/396384911/why-are-more-baby-boys-born-than-girls&quot;&gt;more male babies are actually born each year&lt;/a&gt;, and certainly more male babies have been registered with the SSA (53% male vs 47% female); nonetheless, I was still surprised to see such a large proportion of male names in my quick popularity chart. Digging into the data further, I found that even though fewer females appear in the data, there have been consistently more unique female names each year.&lt;/p&gt;

&lt;center&gt;
&lt;img src=&quot;https://kimfetti.github.io/images/unique_names.png&quot; alt=&quot;Number of unique names for male and female babies since 1950&quot; width=&quot;700&quot; /&gt;
&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Statistical dispersion appears to play a significant role.  To put it back in financial terms, some male names like the ones on my top 20 list are just extremely “wealthy.” (The most popular name, “Michael,” accounts for over 3% of all male children born since 1950.)   These ultra-popular masculine names likely pass down from generation to generation.  Females babies, on the other hand, are distributed more widely across a variety of names, so extra names share in the “wealth” of female children.  We can verify this theory by returning to the Gini coefficient.&lt;/p&gt;

&lt;p&gt;Consider how female children disperse across each name.  Some names in the dataset account for only 5 babies&lt;sup id=&quot;fnref:2&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt; since 1950, while “Jennifer” represents nearly 1.5 million individuals.  Tallying up all females born with each name since 1950 and sorting the names from least to most popular, we find the Gini coefficient to be 0.96, implying a huge disparity in the most popular versus the most unique names.&lt;/p&gt;

&lt;p&gt;Male names exhibit a very similar Lorenz curve but with a little more skew, registering a Gini coefficient of 0.97. The difference between male and female coefficients appears insignificant, but consider an alternative viewpoint.  Instead of aggregating across time, calculate a yearly Gini coefficient for each gender.  Plotting both the female and male Gini coefficients for each year since 1950 demonstrates a clear and persistent pattern where the male coefficient presents consistently higher.&lt;sup id=&quot;fnref:3&quot;&gt;&lt;a href=&quot;#fn:3&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;  Thus male names experience more statistical dispersion than female monikers.   Also of note, the Gini values for both genders have ticked downward since the 1990s, indicating a trending preference toward more diverse naming conventions.&lt;/p&gt;

&lt;center&gt;
&lt;img src=&quot;https://kimfetti.github.io/images/gini_names.png&quot; alt=&quot;The male Gini coefficient tracks consistently higher throughout time&quot; width=&quot;700&quot; /&gt;
&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;In a final look at this dataset, let’s examine popularity trends for individual names over time.  Now utilize Gini by grouping the female data by name and calculating the Gini coefficient as it pertains to yearly frequencies; that is, for any given name, sort each year of the dataset by that name’s least to most popular year in order to compute Gini.  Names with lower Gini coefficients demonstrate similar levels of popularity throughout the entire time span, while higher coefficients imply uneven popularity levels.  The figure below compares popularity trends for the names “Scarlett” and “Miriam.”  Both names represent about 60,000 female babies in the dataset; however, the sharp increase in babies named “Scarlett” generates a large Gini coefficient while “Miriam” sees a low Gini value since the name has consistently been given to roughly 1,000 babies every year since 1950.&lt;/p&gt;

&lt;center&gt;
&lt;img src=&quot;https://kimfetti.github.io/images/scarlett_vs_miriam.png&quot; alt=&quot;The popularity of female names Miriam and Scarlett over time with Gini coeffients&quot; width=&quot;900&quot; /&gt;
&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;case-2-healthcare-prices&quot;&gt;Case #2: Healthcare Prices&lt;/h2&gt;

&lt;p&gt;Now shift to &lt;a href=&quot;https://www.cms.gov/Research-Statistics-Data-and-Systems/Statistics-Trends-and-Reports/Medicare-Provider-Charge-Data/Inpatient2017&quot;&gt;this 2017 healthcare pricing dataset&lt;/a&gt; hosted by the Centers for Medicare and Medicaid Services, a federal agency of the United States.  These data, aggregated as procedural averages for individual hospitals, include the charges and eventual payments for over 500 separate inpatient procedures for Medicare patients.  I applied Gini coefficient calculations to determine which, if any, procedures require better billing standardization.  The underlying basis for my analysis boils down to this: the higher the Gini coefficient, the greater the disparity in what different hospitals charge for a given procedure.  Procedures with large Gini values could then necessitate regulation or more transparent cost details.&lt;/p&gt;

&lt;p&gt;The procedure, or diagnosis related group (DRG), with the highest Gini coefficient in this dataset&lt;sup id=&quot;fnref:4&quot;&gt;&lt;a href=&quot;#fn:4&quot; class=&quot;footnote&quot;&gt;4&lt;/a&gt;&lt;/sup&gt; is labeled as, “Alcohol/Drug Abuse or Dependency w Rehabilitation Therapy.”  This perhaps elicits little surprise given that rehabilitation therapies vary widely both in terms of treatment length and illness severity; we probably expect a wide range in what assorted hospitals charge.  In fact, all diagnoses with the largest Gini coefficients, such as coagulation disorders and psychoses, can vary in severity.  Procedural charges that show the most uniformity among the hospitals, on the other hand, mostly describe one-time cardiac events such as value replacement, percutaneous surgeries, or observation for chest pain.&lt;/p&gt;

&lt;center&gt;
&lt;table width=&quot;800&quot;&gt;
  &lt;caption&gt;Gini coefficients among average hospital charges per diagnosis related group (DRG)&lt;/caption&gt;
  &lt;colgroup&gt;
    &lt;col span=&quot;1&quot; style=&quot;width: 50%;&quot; /&gt;
    &lt;col span=&quot;1&quot; style=&quot;width: 50%;&quot; /&gt;
  &lt;/colgroup&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;center&gt;Highest Gini&lt;/center&gt;&lt;/th&gt;
      &lt;th&gt;&lt;center&gt;Lowest Gini&lt;/center&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Alcohol/Drug Abuse or Dependence w Rehabilitation Therapy&lt;/td&gt;
      &lt;td&gt;Aortic and Heart Assist Procedures except Pulsation Balloon w MCC&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Coagulation Disorders&lt;/td&gt;
      &lt;td&gt;Angina Pectoris&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Alcohol/Drug Abuse or Dependence, Left AMA&lt;/td&gt;
      &lt;td&gt;Cardiac Valve &amp;amp; Oth Maj Cardiothoracic Proc w/o Card Cath w/o CC/MCC&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Psychoses&lt;/td&gt;
      &lt;td&gt;Heart Transplant or Implant of Heart Assist System w MCC&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Other Respiratory System Diagnoses w MCC&lt;/td&gt;
      &lt;td&gt;Perc Cardiovasc Proc w/o Coronary Artery Stent w/o MCC&lt;/td&gt;
    &lt;/tr&gt;
   &lt;/tbody&gt;
&lt;/table&gt;
&lt;/center&gt;

&lt;p&gt;So what about billing regulation?  Do we need more safeguards in place to be sure hospitals are charging similar amounts for similar procedures?  Well, more cost transparency certainly doesn’t hurt, especially for treatments that range in duration or intensity, but let’s go back to the dataset.  In addition to the information about the amounts hospitals charge, the data also contain &lt;a href=&quot;https://www.cms.gov/Research-Statistics-Data-and-Systems/Statistics-Trends-and-Reports/Medicare-Provider-Charge-Data/Downloads/Inpatient_Outpatient_FAQ.pdf&quot;&gt;the total payments that the hospitals actually received&lt;/a&gt;.  Applying the same type of analysis to the payments received yields much lower Gini values.  In fact, the Gini coefficient is lower for the average payments received than the hospital charges, for &lt;em&gt;every single procedure&lt;/em&gt;.  This curious insight signals that the contracts in place for Medicare payments &lt;em&gt;already&lt;/em&gt; do quite a lot to moderate and regularize procedural costs.&lt;sup id=&quot;fnref:5&quot;&gt;&lt;a href=&quot;#fn:5&quot; class=&quot;footnote&quot;&gt;5&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;center&gt;
&lt;img src=&quot;https://kimfetti.github.io/images/gini_health.png&quot; alt=&quot;Comparison of Gini coeffients for total payments vs hospital charges&quot; width=&quot;600&quot; /&gt;
&lt;/center&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;The Gini coefficient continues to provide insight over 100 years after its inception.  As a good general-purpose measure of statistical dispersion, Gini can be used broadly to explore and understand data from nearly any discipline.  Currently, the most popular metric for understanding data spread is likely standard deviation; however, there are &lt;a href=&quot;https://stats.stackexchange.com/questions/210829/difference-is-summary-statistics-gini-coefficient-and-standard-deviation/211595&quot;&gt;several key differences&lt;/a&gt; between standard deviation and the Gini coefficient.  Firstly, standard deviation retains the scale of your data.  You report the standard deviation of US incomes in dollars, while you might give the standard deviation of temperatures in degrees Celsius. The Gini coefficient, however, has no measurement unit, also called scale invariance. Secondly, standard deviation is unbounded in that it can be any non-negative value, but Gini typically ranges between zero and one.  Gini’s scale invariance and strict bounds make comparing statistical dispersion between two dissimilar data sources much easier.  Lastly, standard deviation and the Gini coefficient judge statistical dispersion through different lenses.  Gini reaches its maximum value for a non-negative dataset if it contains one positive and the rest zeros.  Standard deviation reaches its maximum if half the data live at the extreme maximum and the other half register at the extreme minimum.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.scientificamerican.com/article/ask-gini/&quot;&gt;Certain limitations&lt;/a&gt; apply to the Gini coefficient despite its many benefits.  Like other summary statistics, Gini condenses information thereby losing the granularity of the original dataset.  Gini is also many-to-one, which means various different distributions map to the same coefficient.  The Gini coefficient proves to be quite sensitive to outliers such that a singular extreme datapoint (large or small) can increase Gini dramatically.  Yet, economists have also criticized the Gini coefficient for being &lt;a href=&quot;https://www.bbc.com/news/blogs-magazine-monitor-31847943&quot;&gt;undersensitive to wealth changes in upper and lower echelons&lt;/a&gt;.  Researchers have go on to introduce several alternative metrics to study different aspects of income inequality, such as the &lt;a href=&quot;https://en.wikipedia.org/wiki/Income_inequality_metrics#Palma_ratio&quot;&gt;Palma ratio&lt;/a&gt;, which explicitly captures financial fluctuations for the richest 10% and the poorest 40% of a population.&lt;/p&gt;

&lt;p&gt;No matter which metric you choose to understand statistical dispersion, building data intuition certainly goes beyond simple estimates of the mean or median.  The Gini coefficient, long since popular in the field of economics, provides excellent insight about the spread of data regardless of your chosen subject area. As demonstrated in this post, Gini could be tracked over time, calculated for specific segments of your data, or used to detect processes requiring better price standardization.  Its applications are limitless, and it might just be the missing component of your EDA toolkit.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/kimfetti/Blog/blob/master/gini_coefficient.ipynb&quot;&gt;Check out this code on GitHub!&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;The Gini coefficient is strictly non-negative, \(G \geq 0\), as long as the mean of the data is assumed positive.  Gini can theoretically be greater than one if some data values are negative, which occurs in the context of wealth if some people contribute negatively in the form of debts owed. &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot;&gt;
      &lt;p&gt;The Social Security Administration does not include names that are given to fewer than 5 babies per gender per state due to privacy reasons; therefore, five children for one given female name since 1950 signifies the absolute minimum allowed. &lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:3&quot;&gt;
      &lt;p&gt;The Gini values displayed in the yearly figure are less than the aggregate because popular names tend to stay popular year after year thus bolstering naming inequity and increasing the Gini coefficient. &lt;a href=&quot;#fnref:3&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:4&quot;&gt;
      &lt;p&gt;Some diagnosis related groups (DRGs) occur at as few as one hospital for the entire year.  I have filtered the dataset down to procedures that are documented by at least 50 hospitals to avoid high variance issues. &lt;a href=&quot;#fnref:4&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:5&quot;&gt;
      &lt;p&gt;The payments hospitals receive are strictly less than the amounts they charge. Decreasing a dataset’s mean while holding its standard deviation fixed &lt;a href=&quot;https://repository.upenn.edu/gse_grad_pubs/6/&quot;&gt;actually &lt;em&gt;increases&lt;/em&gt; the Gini coefficient&lt;/a&gt;.  Here we observe just the opposite effect so statistical dispersion must be lessened in the payments received. &lt;a href=&quot;#fnref:5&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</content>

			
				<category term="mathematics" />
			
				<category term="applications" />
			
			

			<published>2020-06-05T00:00:00-04:00</published>
		</entry>
	
		<entry>
			<id>http://localhost:4000//data/web%20scraping/python-web-scraping/</id>
			<title>Let's Scrape the Web: PyCon 2020 Video Tutorial</title>
			<link href="http://localhost:4000//data/web%20scraping/python-web-scraping/" rel="alternate" type="text/html" title="Let's Scrape the Web: PyCon 2020 Video Tutorial" />
			<updated>2020-05-04T00:00:00-04:00</updated>

			
				
				<author>
					
						<name>KFessel</name>
					
					
					
				</author>
			
			<summary>&lt;em&gt;Developing web scraping skills allows you to save time and to broaden your access to data.  This tutorial covers web scraping with Python from the basics of HTML to the full scraping pipeline.&lt;/em&gt;</summary>
			<content type="html" xml:base="http://localhost:4000//data/web%20scraping/python-web-scraping/">&lt;!--more--&gt;

&lt;p&gt;Web scraping empowers you to write computer programs to collect data from websites automatically and recent legal rulings support your right to do so.  This tutorial covers the breadth and depth of web scraping: from HTML basics through pipeline methods to compile entire datasets.  My video provides step-by-step instructions on utilizing Python libraries like &lt;code class=&quot;highlighter-rouge&quot;&gt;requests&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;BeautifulSoup&lt;/code&gt; as well as links to supplementary tutorial resources in the form of Google Colab or Jupyter notebooks.&lt;/p&gt;

&lt;p&gt;Check out the supplementary materials via Google Colab (&lt;a href=&quot;https://bit.ly/pycon2020_scrapingbasics&quot;&gt;Scraping Basics&lt;/a&gt; and &lt;a href=&quot;https://bit.ly/pycon2020_scrapingwiki&quot;&gt;Scraping Wikipedia&lt;/a&gt;) or on &lt;a href=&quot;https://github.com/kimfetti/Conferences/tree/master/PyCon_2020&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;

</content>

			
				<category term="data" />
			
				<category term="web scraping" />
			
			

			<published>2020-05-04T00:00:00-04:00</published>
		</entry>
	
		<entry>
			<id>http://localhost:4000//nlp/spacy-for-the-win/</id>
			<title>Level Up: spaCy NLP for the Win</title>
			<link href="http://localhost:4000//nlp/spacy-for-the-win/" rel="alternate" type="text/html" title="Level Up: spaCy NLP for the Win" />
			<updated>2020-02-21T00:00:00-05:00</updated>

			
				
				<author>
					
						<name>KFessel</name>
					
					
					
				</author>
			
			<summary>&lt;em&gt;spaCy provides an easy-to-use framework for getting started with NLP.  This post covers the basics of spaCy and highlights its functionality on a small corpus of restaurant reviews..&lt;/em&gt;</summary>
			<content type="html" xml:base="http://localhost:4000//nlp/spacy-for-the-win/">&lt;!--more--&gt;

&lt;p&gt;Natural language processing (NLP) is a branch of artificial intelligence in which computers extract information from written or spoken human language.  This field has experienced a massive rise in popularity over the years, not only among academic communities but also in industry settings. Because unstructured text makes up so much of the data we collect today (e.g. emails, text messages, and even this blog post), many practitioners regularly use NLP at the workplace and require straightforward tools to reliably parse through substantial amounts of documents.  The open-source library spaCy meets these exact demands by processing text quickly and accurately, all within a simplified framework.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://explosion.ai/blog/introducing-spacy&quot;&gt;Released in 2015&lt;/a&gt;, spaCy was initially created to help small businesses better leverage NLP.  Its practical design offers users a streamlined approach for accomplishing necessary NLP tasks, and it assumes a more pragmatic stance toward NLP than traditional libraries like NLTK, which were developed with a more research-focused, exploratory intention.  spaCy can be quite flexible, however, as it allows more experienced users the option of customizing just about any of its tools.  spaCy is considered a Python package, but the “Cy” in spaCy indicates that Cython powers many of the underlining computations.  This makes spaCy incredibly fast, even for more complicated processes.  I will illustrate a selection of spaCy’s core functionality in this post and will end by implementing these techniques on sample restaurant reviews.&lt;/p&gt;

&lt;p&gt;Please continue to the &lt;a href=&quot;https://opendatascience.com/level-up-spacy-nlp-for-the-win/&quot;&gt;ODSC blog&lt;/a&gt; to read my full post covering this introduction to spaCy.&lt;/p&gt;

</content>

			
				<category term="nlp" />
			
			

			<published>2020-02-21T00:00:00-05:00</published>
		</entry>
	
		<entry>
			<id>http://localhost:4000//mathematics/course-report-math-ds/</id>
			<title>Math for Data Science: An Interview with Course Report</title>
			<link href="http://localhost:4000//mathematics/course-report-math-ds/" rel="alternate" type="text/html" title="Math for Data Science: An Interview with Course Report" />
			<updated>2020-02-17T00:00:00-05:00</updated>

			
				
				<author>
					
						<name>KFessel</name>
					
					
					
				</author>
			
			<summary>&lt;em&gt;Math skills are critical for a successful career in data science. Find out why in this interview with Course Report.&lt;/em&gt;</summary>
			<content type="html" xml:base="http://localhost:4000//mathematics/course-report-math-ds/">&lt;!--more--&gt;

&lt;p&gt;I recently sat down with &lt;a href=&quot;https://www.coursereport.com/&quot;&gt;Course Report&lt;/a&gt; to discuss the math needed to become a data scientist.  Blending coding skills with mathematics lies at the heart of data science, so understanding fundamental math concepts is critical for a successful career within the field.  Linear algebra, calculus, probability, and statistics are the four math disciplines that fuel the bulk of data science.  In this interview, I discuss the role each topic plays in data science; I also work through an example problem from all four subjects.&lt;/p&gt;

&lt;p&gt;Please continue to the &lt;a href=&quot;https://www.coursereport.com/blog/math-for-data-science-with-metis&quot;&gt;Course Report blog&lt;/a&gt; for a write-up of the interview.&lt;/p&gt;

&lt;!--
image:
    thumb: CourseReport_Thumb.png
    homepage: CourseReport_Feb2020.png
    title: CourseReport_Feb2020.png
    caption: &quot;Photo by CP. Image constructed by Course Report.&quot;
    caption_url: &quot;https://www.coursereport.com/&quot;
--&gt;
</content>

			
				<category term="mathematics" />
			
			

			<published>2020-02-17T00:00:00-05:00</published>
		</entry>
	
		<entry>
			<id>http://localhost:4000//visualizations/puzzles/down-and-up/</id>
			<title>Down and Up: A Puzzle Illustrated with D3.js</title>
			<link href="http://localhost:4000//visualizations/puzzles/down-and-up/" rel="alternate" type="text/html" title="Down and Up: A Puzzle Illustrated with D3.js" />
			<updated>2020-01-05T00:00:00-05:00</updated>

			
				
				<author>
					
						<name>KFessel</name>
					
					
					
				</author>
			
			<summary>&lt;em&gt;Math puzzles provide great amusement for some people, but many others approach them with dread--especially during interviews.  Such trepidation may be unwarranted, however, because a simple visual--like the ones illustrated in this post--could be all you need to find a solution.&lt;/em&gt;</summary>
			<content type="html" xml:base="http://localhost:4000//visualizations/puzzles/down-and-up/">&lt;head&gt;

    &lt;script src=&quot;https://d3js.org/d3.v4.min.js&quot;&gt;&lt;/script&gt;

    &lt;!--Multiple button functions--&gt;
    &lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/d3/4.3.0/d3.js&quot;&gt;&lt;/script&gt;  
    
    &lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/1.6.1/jquery.min.js&quot;&gt;&lt;/script&gt;


    &lt;style&gt; 

        input {
          border: none;
          color: white;
          padding: 8px 16px;
          margin: 4px 2px;
          cursor: pointer;
        }
        
        input[name=paintButton] {
          background-color: #271B77;
          font-weight: bold;
        }

        input[name=danceButton] {
          background-color: #6BA450;
          font-weight: bold;
        }
        
        input[name=resetButton] {
          background-color: #ADADB0;
          margin-top: 15px;
        }
        
    &lt;/style&gt;
    
    
&lt;/head&gt;

&lt;!-- Begin Post --&gt;

&lt;p&gt;On a recent vacation my husband and I happened upon an entertainment shop that was well stocked with board games, dice, playing cards, etc.  We quickly found an item that both of us, absolute nerds that we are, deemed an essential purchase: a book by Boris A. Kordemsky called &lt;a href=&quot;https://www.amazon.com/Moscow-Puzzles-Mathematical-Recreations-Recreational/dp/0486270785/&quot;&gt;The Moscow Puzzles: 359 Mathematical Recreations&lt;/a&gt;.  No, we didn’t spend our entire vacation solving all 359, but we did bring the book home with us and have continued working through them–often over a glass of wine in the evenings.&lt;/p&gt;

&lt;p&gt;One particular puzzle recently caught my attention for several reasons.  I’ll come back to those reasons in a bit, but for now, the problem is called “Down and Up” and it goes like this:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Suppose you have two pencils pressed together and held vertically.  One inch of the pencil on the left, measuring from its lower end, is smeared with paint.  The right pencil is held steady while you slide the left pencil down 1 inch, continuing to press the two pencils together.  You then move the left pencil back up and return it to its former position, all while keeping the two pencils touching.  You continue these actions until you have moved the left pencil down and up 5 times each.  Assume the paint does not dry or run out during this process.  &lt;b&gt;How many inches of each pencil are smeared with paint after your final movement?&lt;/b&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Take a minute to solve this problem before proceeding if you’d like–spoilers ahead!&lt;/p&gt;

&lt;h2 id=&quot;first-thoughts&quot;&gt;First Thoughts&lt;/h2&gt;

&lt;p&gt;When I first heard this problem, I initially thought that perhaps the paint is not smeared to the right pencil at all and perhaps only one inch of paint appears on the left pencil throughout the entire process.  (Did you also expect this?)  But the &lt;em&gt;second&lt;/em&gt; time I read through the problem I started to visualize what might actually be happening.  The solution became much more clear as soon as I tried to make a mental picture of the process.  Since my husband was solving the problem with me, I made him this sketch to share what I was thinking:&lt;/p&gt;

&lt;center&gt;
    &lt;img src=&quot;https://kimfetti.github.io/images/pencil_sketch.png&quot; alt=&quot;Initial ideas as a sketch&quot; width=&quot;550&quot; /&gt;
&lt;/center&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;I managed to distinctly envision the situation, arrive at a solution, and communicate my thought process just with this simple sketch.  For many math puzzles a rough picture provides all you need find the answer, but if my crude drawing hasn’t fully conveyed the solution to you, no worries.  Let’s dive in a bit more methodically with a much nicer illustration.&lt;/p&gt;

&lt;p&gt;&lt;img style=&quot;float: right; padding: 30px;&quot; src=&quot;https://kimfetti.github.io/images/pencil_initial.gif&quot; alt=&quot;Paint is spread to both pencils immediately&quot; width=&quot;500&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;problem-setup&quot;&gt;Problem Setup&lt;/h2&gt;

&lt;p&gt;From the problem directions, we know that initially only the left pencil is smeared with paint.  Recall though that the left pencil presses directly against the right.  This means paint immediately transfers to the right pencil as they are squeezed together.  So both pencils are smeared with one inch of paint even before any of the five down-up movements occur.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;solving-and-illustrating-the-full-problem&quot;&gt;Solving and Illustrating the Full Problem&lt;/h2&gt;

&lt;p&gt;The problem gets a little more complicated as the left pencil moves down and up, but returning to a visual interpretation once again helps immensely.  Also feel free to reread the problem statement at any point to regain your bearings.&lt;/p&gt;

&lt;p&gt;Both pencils are currently smeared with one inch of paint.  Then the left pencil moves down one inch while both pencils continue pressing together.  Can you envision what happens when the left pencil moves down?  Yes!  A clean portion of the left pencil makes contact with the bottom of the right pencil; therefore, another inch of paint transfers over to the left.&lt;/p&gt;

&lt;p&gt;The left pencil now lingers one inch lower than the right.  One inch of the right pencil is smeared with paint, but paint covers &lt;em&gt;two inches&lt;/em&gt; of the left pencil.  The left pencil moves up in the next step of the problem, coming back to its original position.  So the two pencils realign, but what happens to the paint?  Since the left pencil continually makes contact with the right, paint smears over to the right pencil and coats two inches of both pencils at the end of the first down-and-up cycle.&lt;/p&gt;

&lt;p&gt;The four remaining cycles proceed similarly, with paint transferring first to the left pencil and then to the right.  &lt;b&gt;Finally after five rounds of movements, both pencils are smeared with a total of six inches of paint: an initial inch plus five more inches, one for each of the down-up cycles.&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;This problem ultimately hinges on the ability to translate the problem statement into an explanatory visual.  To further contextualize this solution, I created an interactive figure with D3.js.  Below both pencils start with one inch of paint as described in the problem setup. Use the “Move Pencil” button to convince yourself of the answer I provided.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: these pencils are six fictitious inches long.  After the fifth movement, the pencils reach equilibrium in that paint completely covers them. Hit the “Reset” button at any time to start over.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div style=&quot;width: 100%; padding-bottom: 15px&quot; id=&quot;pencilContainer&quot;&gt;
    &lt;div style=&quot;float: left; width: 10%; height: 400; padding-left: 5%;&quot;&gt;
        &lt;input name=&quot;paintButton&quot; type=&quot;button&quot; value=&quot;Move Pencil&quot; onclick=&quot;movePencil(); addPaint(1,800); addPaint(2,2000); incrUnits();&quot; /&gt;
        &lt;br /&gt;
        &lt;input name=&quot;resetButton&quot; type=&quot;button&quot; value=&quot;Reset&quot; onclick=&quot;removePaint()&quot; /&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;script&gt;
var pencilColor = &quot;#F0C446&quot;;
var paintColor = &quot;#271B77&quot;;

var pencilData = [1, 2];

var width = $(&quot;div#pencilContainer&quot;).width();
var height = 400;

var svg = d3.select(&quot;div#pencilContainer&quot;).append(&quot;svg&quot;)
    .attr(&quot;width&quot;, width*.6)
    .attr(&quot;height&quot;, height)
    .style('transform', 'translate(40%, 0%)');

var objects = svg.append(&quot;g&quot;);

var pencils = objects.selectAll(&quot;g&quot;)
  .data(pencilData)
  .enter()
  .append(&quot;g&quot;)
    .attr(&quot;id&quot;, function(d, i) { return i; })
    .attr(&quot;transform&quot;, function(d, i) {return &quot;translate(&quot; + i*50 + &quot;,0)&quot;; });

var rects = pencils.append(&quot;rect&quot;)
    .attr(&quot;x&quot;, 50)
    .attr(&quot;y&quot;, 50)
    .attr(&quot;width&quot;, 50)
    .attr(&quot;height&quot;, 300)
    .attr(&quot;fill&quot;, pencilColor)
    .style(&quot;fill-opacity&quot;, .7)
    .style(&quot;stroke-width&quot;,&quot;.2em&quot;)
    .style(&quot;stroke&quot;, pencilColor);

var triangles = pencils.append(&quot;path&quot;)
    .attr('d', function(d, i) {
        var x = 0, y = 50;
        return 'M ' + (50+x) + ' ' + y + ' l ' + y/2 + ' ' + -y + ' l ' + y/2 + ' ' + y + ' z';
     })
    .attr(&quot;fill&quot;, pencilColor)
    .style(&quot;fill-opacity&quot;, .4)
    .style(&quot;stroke-width&quot;,&quot;.2em&quot;)
    .style(&quot;stroke&quot;, pencilColor);

var tips = pencils.append(&quot;path&quot;)
    .attr('d', function(d, i) {
        var x = 12.5, y = 25;
        return 'M ' + (50+x) + ' ' + y + ' l ' + y/2 + ' ' + -y + ' l ' + y/2 + ' ' + y + ' z';
    })
    .style(&quot;fill-opacity&quot;, .7)
    .style(&quot;stroke-width&quot;,&quot;.2em&quot;)
    .style(&quot;stroke&quot;, &quot;#393731&quot;);

var paint = pencils.append(&quot;rect&quot;)
    .attr(&quot;x&quot;, 50)
    .attr(&quot;y&quot;, 300)
    .attr(&quot;width&quot;, 50)
    .attr(&quot;height&quot;, 50)
    .attr(&quot;fill&quot;, paintColor)
    .style(&quot;fill-opacity&quot;, 0.9)
    .style(&quot;stroke-width&quot;,&quot;.2em&quot;)
    .style(&quot;stroke&quot;, paintColor);

var paintUnits = 1;

var text = svg.append(&quot;text&quot;);

text
  .attr(&quot;x&quot;, 225)
  .attr(&quot;y&quot;, 50)
  .attr(&quot;font-size&quot;,22);

text.append(&quot;tspan&quot;)
  .text(&quot;Paint:&quot;);

var paintText = text.append(&quot;tspan&quot;)
    .attr(&quot;dx&quot;, 10)
    .style(&quot;fill&quot;, paintColor)
    .attr(&quot;font-weight&quot;, &quot;bold&quot;)
    .text(paintUnits + &quot; Inch&quot;);

function movePencil() {
    d3.select(&quot;g&quot;).selectAll(&quot;*&quot;)
      .filter(function (d) { return d == 1; })
      .transition()
        .duration(750)
        .attr(&quot;transform&quot;, &quot;translate(0,25)&quot;)
      .on(&quot;end&quot;,function() {  
          d3.select(this)
            .transition()     
              .delay(750)
              .attr(&quot;transform&quot;, &quot;translate(0,0)&quot;)
      });
}

function addPaint(pencilNumber, delay) {
    d3.select(&quot;g&quot;).selectAll(&quot;*&quot;)
      .filter(function(d) { return d == pencilNumber; })
      .filter(function(d,i) { return i == 4; })
      .transition()
        .delay(delay)
        .attr(&quot;height&quot;, function(d) {
            return Math.min(paintUnits*50 + 50, 300); 
        })
        .attr(&quot;y&quot;, function(d) {
            return Math.max(300 - 50*paintUnits, 50);
        });
}

function incrUnits() {
    paintUnits++;
    paintText.transition()
      .delay(2400)
      .text( Math.min(paintUnits, 6) + &quot; Inches&quot;);
}

function removePaint() {
    paint
      .transition()
      .duration(500)
        .attr(&quot;y&quot;, 300)
        .attr(&quot;height&quot;, 50);

    paintUnits = 1;
    paintText.transition()
      .delay(250)
      .text( paintUnits + &quot; Inch&quot;);
}

&lt;/script&gt;

&lt;h2 id=&quot;backstory-and-problem-extensions&quot;&gt;Backstory and Problem Extensions&lt;/h2&gt;

&lt;p&gt;Earlier I mentioned this problem caught my eye for several reasons.  The first reason is exactly what we have been discussing.  I marveled at how tricky the problem sounds initially as opposed to how simple it becomes as soon as you construct an appropriate mental image of the situation.&lt;/p&gt;

&lt;p&gt;The second reason this puzzle piqued my interest is its history.  As explained in Kordemsky’s book, Leonid Mikhailovich Rybakov, a Soviet mathematician who lived in the early 20th Century, created this “Down and Up” problem.  I deeply appreciate math problems that pervade through many time periods and geographies.  Solving such puzzles allows me to feel more connected to the past and to other mathematicians around the globe.&lt;/p&gt;

&lt;p&gt;Finally, this problem sparked my curiosity because Rybakov first thought it up when returning home from a successful duck hunt.  Kordemsky encourages readers to contemplate why this could be the case but goes on to explain in his “Answers” section.  From &lt;em&gt;The Moscow Puzzles&lt;/em&gt; book:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Looking at his boots, Leonid Mikhailovich noticed that their entire lengths were muddied where they usually rub each other while he walks.&lt;br /&gt;
“How puzzling,” he thought, “I didn’t walk in any deep mud, yet my boots are muddied up to the knees.” &lt;br /&gt;
Now you understand the origin of the puzzle.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Just as the paint smeared the entire length of both pencils, Rybakov’s boots were covered from tip to top because mud had transferred from one boot to the other as he walked.&lt;/p&gt;

&lt;p&gt;I continued to think about how this concept might apply to other situations, and I came up with one amusing but slightly unpleasant example.  Consider two lines of contra dancers in which the first dancer in the first line unfortunately feels unwell.  If this dancer’s sickness is highly communicable, she will, of course, pass along her malady to her dance partner who is positioned across from her.  Sometimes in contra dancing participants exchange dance partners by shifting the two lines laterally.  Regrettably, when this happens the newly infected dancer will pass the disease back across the line, and eventually the entire group of dancers become ill.  Try out my widget below to see this application in action.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div style=&quot;width: 100%; padding-bottom: 15px&quot; id=&quot;contraContainer&quot;&gt;
    &lt;div style=&quot;float: left; width: 10%; height: 400; padding-left: 5%;&quot;&gt;
        &lt;input name=&quot;danceButton&quot; type=&quot;button&quot; value=&quot;Dance!&quot; onclick=&quot;moveBlushers('left', 0); sickBlusher(); moveBlushers('center', 2500); sickGrinner();&quot; /&gt;
        &lt;br /&gt;
        &lt;input name=&quot;resetButton&quot; type=&quot;button&quot; value=&quot;Reset&quot; onclick=&quot;makeWell()&quot; /&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;script&gt;

var blushEmoji = &quot;https://kimfetti.github.io/images/emoji_blush.png&quot;;
var grinEmoji = &quot;https://kimfetti.github.io/images/emoji_grin.png&quot;;
var sickEmoji = &quot;https://kimfetti.github.io/images/emoji_sick.png&quot;;

var contraData = [1, 2, 3, 4, 5];

var w = $(&quot;div#contraContainer&quot;).width();
var h = 200;

var canvas = d3.select(&quot;div#contraContainer&quot;).append(&quot;svg&quot;)
    .attr(&quot;width&quot;, w*.75)
    .attr(&quot;height&quot;, h)
    .style('transform', 'translate(30%, 0%)');

var blushGroup = canvas.append(&quot;g&quot;)
    .attr(&quot;id&quot;, &quot;blushers&quot;);

var blushers = blushGroup.selectAll(&quot;image&quot;)
  .data(contraData)
  .enter()
  .append(&quot;image&quot;)
    .attr('xlink:href', function (d, i) {
        if (i == 0) {
          return sickEmoji;
        }
        else {
          return blushEmoji;
        }
    })
    .attr(&quot;x&quot;, function (d, i) { return w/75+d*(w/10); })
    .attr(&quot;y&quot;, 0)
    .attr('width', w/13)
    .attr('height', w/13);
    
var grinGroup = canvas.append(&quot;g&quot;)
    .attr(&quot;id&quot;, &quot;grinners&quot;);

var grinners = grinGroup.selectAll(&quot;image&quot;)
  .data(contraData)
  .enter()
  .append(&quot;image&quot;)
    .attr('xlink:href', grinEmoji)
    .attr(&quot;x&quot;, function (d, i) { return w/75+d*(w/10); })
    .attr(&quot;y&quot;, 100)
    .attr('width', w/14)
    .attr('height', w/14);

var sickNum = 1;

function moveBlushers(pos, delay) {
    if (sickNum == 1) { return; }
    else {
      d3.select(&quot;#blushers&quot;)
        .selectAll(&quot;image&quot;)
        .transition()
        .delay(delay)
        .duration(1000)
          .attr(&quot;transform&quot;, function(d) {
              if (pos==&quot;left&quot;) { return &quot;translate(&quot; + -w/10 +&quot;, 0)&quot;; }
              else if (pos==&quot;center&quot;) { return &quot;translate(0, 0)&quot;; }
          });
    };
}

function sickBlusher() {
    {
        if (sickNum == 1) { return; }
        else { delay = 1200; }
    }
    d3.select(&quot;#blushers&quot;)
      .selectAll(&quot;image&quot;)
      .filter( function (d) { return d == sickNum; })

      .transition()
      .delay(delay)
        .style(&quot;opacity&quot;, 0)
        .attr(&quot;xlink:href&quot;, sickEmoji)

      .transition()
      .duration(800)
        .ease(d3.easeLinear)
        .style(&quot;opacity&quot;, 1);
}

function sickGrinner() {
    {
        if (sickNum == 1) { delay = 300; }
        else { delay = 3300; }
    }
    d3.select(&quot;#grinners&quot;)
      .selectAll(&quot;image&quot;)
      .filter( function (d) { return d == sickNum; })
      .transition()
      .delay(delay)
        .style(&quot;opacity&quot;, 0)
        .on(&quot;end&quot;, function() {  
            d3.select(this)
              .transition()      
              .duration(800)
                .ease(d3.easeLinear)
                .style(&quot;opacity&quot;, 1)
                .attr(&quot;xlink:href&quot;, sickEmoji)
                .attr(&quot;width&quot;, w/13)
                .attr(&quot;height&quot;, w/13)
        });
    sickNum++;
}

function makeWell() {

    d3.select(&quot;#blushers&quot;)
      .selectAll(&quot;image&quot;)
        .attr('xlink:href', function (d, i) {
            if (i == 0) { return sickEmoji; }
            else { return blushEmoji; }
        })
        .attr(&quot;width&quot;, w/13)
        .attr(&quot;height&quot;, w/13);

    d3.select(&quot;#grinners&quot;)
      .selectAll(&quot;image&quot;)
        .attr(&quot;xlink:href&quot;, grinEmoji)
        .attr(&quot;width&quot;, w/14)
        .attr(&quot;height&quot;, w/14);

    sickNum = 1;
}

&lt;/script&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;I hope you have enjoyed this discussion on one of my new favorite math puzzles along with these illustrative D3 visuals.  Making a mental image of a math puzzle is not always easy, but it can be invaluable when solving problems like these–especially if you are a visual learner like myself.  The next time you feel stuck on an interview question, check to see if sketching or imagining the physical setup of the problem helps.  For me it often does.&lt;/p&gt;

&lt;p&gt;I also hope you have enjoyed learning a little about the backstory behind this puzzle.  Some of the world’s best math puzzles were created long ago, so I believe looking to the past when attempting to sharpen our minds benefits us greatly.  Furthermore, expanding this kind of problem to new applications, like I did with the contra dancers, helps solidify core concepts and builds intuition for future brainteasers.  It also makes math problems more enjoyable because you relate them to your own life.  So now it’s your turn – can you think of any other “Down and Up” scenarios?&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Check out my D3 code on GitHub!&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/kimfetti/Blog/blob/master/pencil_paint.html&quot;&gt;Pencils and Paint&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/kimfetti/Blog/blob/master/contra.html&quot;&gt;Contra Dancers&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
</content>

			
				<category term="visualizations" />
			
				<category term="puzzles" />
			
			

			<published>2020-01-05T00:00:00-05:00</published>
		</entry>
	
		<entry>
			<id>http://localhost:4000//data/web%20scraping/gather-youtube-data/</id>
			<title>How to Gather Data from YouTube</title>
			<link href="http://localhost:4000//data/web%20scraping/gather-youtube-data/" rel="alternate" type="text/html" title="How to Gather Data from YouTube" />
			<updated>2019-11-12T00:00:00-05:00</updated>

			
				
				<author>
					
						<name>KFessel</name>
					
					
					
				</author>
			
			<summary>&lt;em&gt;You can mine YouTube's massive content library for many different types of data.  This post provides instructions for obtaining the videos themselves, the video transcripts, as well as YouTube search results.&lt;/em&gt;</summary>
			<content type="html" xml:base="http://localhost:4000//data/web%20scraping/gather-youtube-data/">&lt;p&gt;Since its 2005 inception, YouTube has entertained, educated, and inspired more than &lt;a href=&quot;https://biographon.com/youtube-stats/&quot;&gt;one billion people&lt;/a&gt;.  It now ranks as the &lt;a href=&quot;https://www.alexa.com/siteinfo/youtube.com&quot;&gt;2nd most visited website&lt;/a&gt; on the planet, and its users upload 300 hours of video content every minute.  YouTube clearly dominates as the world’s premier source of &lt;a href=&quot;https://www.youtube.com/watch?v=_OBlgSz8sSM&quot;&gt;cute baby moments&lt;/a&gt;, &lt;a href=&quot;https://www.youtube.com/watch?v=vq8G81oOHhY&quot;&gt;epic sports fails&lt;/a&gt;, and &lt;a href=&quot;https://www.youtube.com/watch?v=AS7_6Uv_Bn0&quot;&gt;hilarious cat videos&lt;/a&gt;, but its vast troves of content can also be leverage to strengthen a wide variety of data science projects.  In this post, I share how you can gain access to three types of YouTube data: the videos themselves for use in computer vision tasks, the video transcripts for natural language processing (NLP), and video search results for hybrid machine learning efforts.&lt;/p&gt;

&lt;p&gt;Please continue to the &lt;a href=&quot;https://www.thisismetis.com/blog/how-to-gather-data-from-youtube&quot;&gt;Metis blog&lt;/a&gt; to read my full post covering data collection from YouTube.&lt;/p&gt;

</content>

			
				<category term="data" />
			
				<category term="web scraping" />
			
			

			<published>2019-11-12T00:00:00-05:00</published>
		</entry>
	
		<entry>
			<id>http://localhost:4000//algorithms/literature%20reviews/object-detection-challenges/</id>
			<title>5 Significant Object Detection Challenges and Solutions</title>
			<link href="http://localhost:4000//algorithms/literature%20reviews/object-detection-challenges/" rel="alternate" type="text/html" title="5 Significant Object Detection Challenges and Solutions" />
			<updated>2019-09-10T00:00:00-04:00</updated>

			
				
				<author>
					
						<name>KFessel</name>
					
					
					
				</author>
			
			<summary>&lt;em&gt;Object detection problems pose several unique obstacles beyond what is required for image classification.  Five such challenges are reviewed in this post along with researchers' efforts to overcome these complications.&lt;/em&gt;</summary>
			<content type="html" xml:base="http://localhost:4000//algorithms/literature%20reviews/object-detection-challenges/">&lt;!--more--&gt;

&lt;p&gt;The field of computer vision has experienced substantial progress recently owing largely to advances in deep learning, specifically convolutional neural nets (CNNs).  Image classification, where a computer classifies or assigns labels to an image based on its content, can often see great results simply by leveraging pre-trained neural nets and fine-tuning the last few throughput layers.&lt;/p&gt;

&lt;p&gt;Classifying &lt;em&gt;and&lt;/em&gt; finding an unknown number of individual objects within an image, however, was considered an extremely difficult problem only a few years ago.  This task, called object detection, is now feasible and has even been productized by companies like &lt;a href=&quot;https://cloud.google.com/vision/docs/drag-and-drop&quot;&gt;Google&lt;/a&gt; and &lt;a href=&quot;https://www.ibm.com/watson/services/visual-recognition/&quot;&gt;IBM&lt;/a&gt;. But all of this progress wasn’t easy!  Object detection presents many substantial challenges beyond what is required for image classification.  After a brief introduction to  the topic, let’s take a deep dive into several of the interesting obstacles these problems face along with various emerging solutions.&lt;/p&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;The ultimate purpose of object detection is to locate important items, draw rectangular bounding boxes around them, and determine the class of each item discovered.  Applications of object detection arise in &lt;a href=&quot;https://www.quora.com/What-are-some-interesting-applications-of-object-detection&quot;&gt;many different fields&lt;/a&gt; including detecting pedestrians for self-driving cars, monitoring agricultural crops, and even real-time ball tracking for sports.  Researchers have dedicated a substantial amount of work towards this goal over the years: from &lt;a href=&quot;https://en.wikipedia.org/wiki/Viola%E2%80%93Jones_object_detection_framework&quot;&gt;Viola and Jones&lt;/a&gt;’s facial detection algorithm published in 2001 to &lt;a href=&quot;https://arxiv.org/abs/1708.02002&quot;&gt;RetinaNet&lt;/a&gt;, a fast, highly accurate one-state detection framework released in 2017.  The introduction of CNNs marks a pivotal moment in object detection history, as nearly all modern systems use CNNs in some form.  That said, the remainder of this post will focus on deep learning solutions for object detection, though similar challenges confront other approaches as well.  To learn more about the basics of object detection, check out my post on the Metis blog: “&lt;a href=&quot;https://www.thisismetis.com/blog/a-beginners-guide-to-object-detection&quot;&gt;A Beginner’s Guide to Object Detection&lt;/a&gt;.”&lt;/p&gt;

&lt;h2 id=&quot;challenges&quot;&gt;Challenges&lt;/h2&gt;

&lt;h3 id=&quot;1-dual-priorities-object-classification-and-localization&quot;&gt;1. Dual priorities: object classification and localization&lt;/h3&gt;

&lt;p&gt;The first major complication of object detection is its added goal: not only do we want to classify image objects but also to determine the objects’ positions, generally referred to as the &lt;em&gt;object localization&lt;/em&gt; task.  To address this issue, researchers most often use a multi-task loss function to penalize both misclassifications and localization errors.&lt;/p&gt;

&lt;p&gt;Regional-based CNNs represent one popular class of object detection frameworks.  These methods consist of the generation of region proposals where objects are likely to be located followed by CNN processing to classify and further refine object locations.  Ross Girshick et al. developed &lt;a href=&quot;https://arxiv.org/pdf/1504.08083.pdf&quot;&gt;Fast R-CNN&lt;/a&gt; to improve upon their initial results with &lt;a href=&quot;https://arxiv.org/pdf/1311.2524.pdf&quot;&gt;R-CNN&lt;/a&gt;. As its name implies, Fast R-CNN provides a dramatic speed-up, but accuracy also improves because the classification and localization tasks are optimized using one unified multi-task loss function.  Each candidate region that may contain an object is compared to the image’s true objects.  Candidate regions then incur penalties for both false classifications and misalignment of the bounding boxes.  Hence, the loss function consists of two kinds of terms:&lt;/p&gt;

&lt;p&gt;\[\mathcal{L}(p, u, t^u, v) = \overbrace{\mathcal{L}_c(p,u)}^{classification} + \lambda\overbrace{\left[u\geq 1\right] \mathcal{L}_l(t^u, v)}^{localization}, \]&lt;/p&gt;

&lt;p&gt;where the classification term imposes log loss on the predicted probability of the true object class \(u\) and the localization term is a smooth \(L_1\) loss for the four positional components that define the rectangle.  Note that the localization penalty does not apply to the background class when no object is present, \(u=0\).  Also note the parameter \(\lambda\) may be adjusted to prioritize either classification or localization more strongly.&lt;/p&gt;

&lt;h3 id=&quot;2-speed-for-real-time-detection&quot;&gt;2. Speed for real-time detection&lt;/h3&gt;

&lt;p&gt;Object detection algorithms need to not only accurately classify and localize important objects, they also need to be incredibly fast at prediction time to meet the real-time demands of video processing.  Several key enhancements over the years have boosted the speed of these algorithms, improving test time from the 0.02 frames per second (fps) of R-CNN to the impressive 155 fps of Fast YOLO.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://arxiv.org/pdf/1504.08083.pdf&quot;&gt;Fast R-CNN&lt;/a&gt; and &lt;a href=&quot;https://arxiv.org/pdf/1506.01497.pdf&quot;&gt;Faster R-CNN&lt;/a&gt; aim to speed up the original R-CNN approach.  R-CNN uses &lt;a href=&quot;https://koen.me/research/pub/uijlings-ijcv2013-draft.pdf&quot;&gt;selective search&lt;/a&gt; to generate 2,000 candidate regions of interest (RoIs) and passes each RoI through a CNN base individually, which causes a massive bottleneck since the CNN processing is quite slow. Fast R-CNN instead sends the entire image through the CNN base just once and then matches the RoIs created with selective search to the CNN feature map, yielding a 20-fold reduction in processing time.  While Fast R-CNN is much speedier than R-CNN, yet another speed barrier persists.  It takes approximately 2.3 seconds for Fast R-CNN to perform object detection on a single image, and selective search accounts for a full 2 seconds of that time!  Faster R-CNN replaces selective search with a separate sub-neural network to generate RoIs, creating another 10x speed up and thus testing at a rate of about 7-18 fps.&lt;/p&gt;

&lt;p&gt;Despite these impressive improvements, videos are typically shot at at least 24 fps, meaning Faster R-CNN will likely not keep pace.  Regional-based methods consist of two separate phases: proposing regions and processing them. This task separation proves to be somewhat inefficient.  Another major type of object detection systems relies on a unified one-state approach instead.  These so-called single-shot detectors fully locate and classify objects during a single pass over the image, which substantially decreases test time.  One such single-shot detector &lt;a href=&quot;https://www.cv-foundation.org/openaccess/content_cvpr_2016/papers/Redmon_You_Only_Look_CVPR_2016_paper.pdf&quot;&gt;YOLO&lt;/a&gt; begins by laying out a grid over the image and allows each grid cell to detect a fixed number of objects of varying sizes.  For each true object present in the image, the grid cell associated with the object’s center is responsible for predicting this object.  A complex, multi-term loss function then ensures that all localization and classification occurs within one process.  One version of this method, Fast YOLO, has even achieved rates of 155 fps; however, classification and localization accuracy drops off sharply at this elevated speed.&lt;/p&gt;

&lt;p&gt;Ultimately, today’s object detection algorithms attempt to strike a balance between speed and accuracy.  Several design choices beyond the detection framework influence these outcomes.  For example, &lt;a href=&quot;https://arxiv.org/pdf/1804.02767.pdf&quot;&gt;YOLOv3&lt;/a&gt; allows images of varying resolution: high-res images typically see better accuracy but slower processing times and vice versa for low-res images.  The choice of the CNN base also affects the speed-accuracy tradeoff.  Very deep networks like the 164 layers used in Inception-ResNet-V2 yield impressive accuracy, but pale in comparison to frameworks with VGG-16 in terms of speed.  Object detection design choices must be made in context depending on whether speed or accuracy takes priority.&lt;/p&gt;

&lt;h3 id=&quot;3-multiple-spatial-scales-and-aspect-ratios&quot;&gt;3. Multiple spatial scales and aspect ratios&lt;/h3&gt;

&lt;p&gt;For many applications of object detection, items of interest may appear in a wide range of sizes and aspect ratios.  Practitioners leverage several techniques to ensure detection algorithms are able to capture objects at multiple scales and views.&lt;/p&gt;

&lt;h4 id=&quot;anchor-boxes&quot;&gt;Anchor boxes&lt;/h4&gt;

&lt;p&gt;Instead of selective search, Faster R-CNN’s updated region proposal network uses a small sliding window across the image’s convolutional feature map to generate candidate RoIs.  Multiple RoIs may be predicted at each position and are described relative to reference &lt;em&gt;anchor boxes&lt;/em&gt;.  The shapes and sizes of these anchor boxes are carefully chosen to span a range of different scales and aspect ratios.  This allows various types of objects to be detected with the hopes that the bounding box coordinates need not be adjusted much during the localization task.  Other frameworks, including single-shot detectors, also adopt anchor boxes to initialize regions of interest.&lt;/p&gt;

&lt;center&gt;
&lt;img src=&quot;https://kimfetti.github.io/images/anchors.png&quot; alt=&quot;Anchor boxes&quot; width=&quot;500&quot; /&gt;
&lt;p&gt;&lt;em&gt; Carefully chosen anchor boxes of varying sizes and aspect ratios help create diverse regions of interest.&lt;/em&gt;&lt;/p&gt;
&lt;/center&gt;

&lt;h4 id=&quot;multiple-feature-maps&quot;&gt;Multiple feature maps&lt;/h4&gt;

&lt;p&gt;Single-shot detectors must place special emphasis on the issue of multiple scales because they detect objects with a single pass through the CNN framework.  If objects are detected from the final CNN layers alone, only large items will be found as smaller items may lose too much signal during downsampling in the pooling layers.  To address this problem, single-shot detectors typically look for objects within multiple CNN layers including earlier layers where higher resolution remains.  Despite the precaution of using multiple feature maps, single-shot detectors notoriously struggle to detect small objects, especially those in tight groupings like a flock of birds.&lt;/p&gt;

&lt;center&gt;
&lt;img src=&quot;https://kimfetti.github.io/images/ssd.png&quot; alt=&quot;SSD with multiple feature maps&quot; width=&quot;800&quot; /&gt;
&lt;p&gt;&lt;em&gt; Feature maps from multiple CNN layers help predict objects at multiple scales.&lt;/em&gt;&lt;/p&gt;
&lt;/center&gt;

&lt;h4 id=&quot;feature-pyramid-network&quot;&gt;Feature pyramid network&lt;/h4&gt;

&lt;p&gt;The &lt;a href=&quot;https://arxiv.org/pdf/1612.03144.pdf&quot;&gt;feature pyramid network (FPN)&lt;/a&gt; takes the concept of multiple feature maps one step further.  Images first pass through the typical CNN pathway, yielding semantically rich final layers.  Then to regain better resolution, FPN creates a top-down pathway by upsampling this feature map.  While the top-down pathway helps detect objects of varying sizes, spatial positions may be skewed.  Lateral connections are added between the original feature maps and the corresponding reconstructed layers to improve object localization.  FPN currently provides one of the leading ways to detect objects at multiple scales, and YOLO was augmented with this technique in &lt;a href=&quot;https://arxiv.org/pdf/1804.02767.pdf&quot;&gt;its 3rd version&lt;/a&gt;.&lt;/p&gt;

&lt;center&gt;
&lt;img src=&quot;https://kimfetti.github.io/images/fpn.png&quot; alt=&quot;Feature pyramid network&quot; width=&quot;450&quot; /&gt;
&lt;p&gt;&lt;em&gt; The feature pyramid network detects objects of varying sizes by reconstructing high resolution layers from layers with greater semantic strength.&lt;/em&gt;&lt;/p&gt;
&lt;/center&gt;

&lt;h3 id=&quot;4-limited-data&quot;&gt;4. Limited data&lt;/h3&gt;

&lt;p&gt;The limited amount of annotated data currently available for object detection proves to be another substantial hurdle.  Object detection datasets typically contain ground truth examples for about a dozen to a hundred classes of objects, while image classification datasets can include upwards of 100,000 classes.  Furthermore, crowd sourcing often produces image classification tags for free (for example, by parsing the text of user-provided photo captions).  Gathering ground truth labels &lt;em&gt;along with&lt;/em&gt; accurate bounding boxes for object detection, however, remains incredibly tedious work.&lt;/p&gt;

&lt;p&gt;The COCO dataset, provided by Microsoft, currently leads as some of the best object detection data available.  COCO contains 300,000 segmented images with &lt;a href=&quot;https://github.com/pjreddie/darknet/blob/master/data/coco.names&quot;&gt;80 different categories&lt;/a&gt; of objects with very precise location labels.  Each image contains about 7 objects on average, and items appear at very broad scales.  As helpful as this dataset is, object types outside of these 80 select classes will not be recognized if training solely on COCO.&lt;/p&gt;

&lt;p&gt;A very interesting approach to alleviate data scarcity comes from YOLO9000, the &lt;a href=&quot;https://arxiv.org/pdf/1612.08242.pdf&quot;&gt;second version of YOLO&lt;/a&gt;.  YOLO9000 incorporates many important updates into YOLO, but it also aims to narrow the dataset gap between object detection and image classification.  YOLO9000 trains simultaneously on both COCO and &lt;a href=&quot;http://www.image-net.org/&quot;&gt;ImageNet&lt;/a&gt;, an image classification dataset with tens of thousands of object classes.  COCO information helps precisely locate objects, while ImageNet increases YOLO’s classification “vocabulary.”  A hierarchical WordTree allows YOLO9000 to first detect an object’s concept (such as “animal/dog”) and to then drill down into specifics (such as “Siberian husky”).  This approach appears to work well for concepts known to COCO like animals but performs poorly on less prevalent concepts since RoI suggestion comes solely from the training with COCO.&lt;/p&gt;

&lt;center&gt;
&lt;img src=&quot;https://kimfetti.github.io/images/yolo9000.png&quot; alt=&quot;YOLO9000 WordTree and examples&quot; width=&quot;700&quot; /&gt;
&lt;p&gt;&lt;em&gt; YOLO9000 trains on both COCO and ImageNet to increase classification &quot;vocabulary.&quot;&lt;/em&gt;&lt;/p&gt;
&lt;/center&gt;

&lt;h3 id=&quot;5-class-imbalance&quot;&gt;5. Class imbalance&lt;/h3&gt;

&lt;p&gt;Class imbalance proves to be an issue for most classification problems, and object detection is no exception.  Consider a typical photograph.  More likely than not, the photograph contains a few main objects and the remainder of the image is filled with background.  Recall that selective search in R-CNN produces 2,000 candidate RoIs per image–just imagine how many of these regions do not contain objects and are considered negatives!&lt;/p&gt;

&lt;p&gt;A recent approach called focal loss is implemented in &lt;a href=&quot;https://arxiv.org/abs/1708.02002&quot;&gt;RetinaNet&lt;/a&gt; and helps diminish the impact of class imbalance.  In the optimization loss function, focal loss replaces the traditional log loss when penalizing misclassifications:
\[ FL(p_u) = -\overbrace{(1-p_u)^\gamma\;}^{*} \log(p_u)\]
where \(p_u \) is the predicted class probability for the true class and \(\gamma &amp;gt; 0\).  The additional factor (*) reduces loss for well-classified examples with high probabilities, and the overall effect de-emphasizes classes with many examples that the model knows well, such as the background class.  Objects of interest occupying minority classes, therefore, receive more significance and see improved accuracy.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Object detection is customarily considered to be much harder than image classification, particularly because of these five challenges: dual priorities, speed, multiple scales, limited data, and class imbalance.  Researchers have dedicated much effort to overcome these difficulties, yielding oftentimes amazing results; however, significant challenges still persist.&lt;/p&gt;

&lt;p&gt;Basically all object detection frameworks continue to struggle with small objects, especially those bunched together with partial occlusions.  Real-time detection with top-level classification and localization accuracy remains challenging, and practitioners must often prioritize one or the other when making design decisions.  Video tracking may see improvements in the future if some continuity between frames is assumed rather than processing each frame individually.  Furthermore, an interesting enhancement that may see more exploration would extend the current two-dimensional bounding boxes into three-dimensional bounding cubes.  Even though many object detection obstacles have seen creative solutions, these additional considerations–and plenty more–signal that object detection research is certainly not done!&lt;/p&gt;

</content>

			
				<category term="algorithms" />
			
				<category term="literature reviews" />
			
			

			<published>2019-09-10T00:00:00-04:00</published>
		</entry>
	
		<entry>
			<id>http://localhost:4000//algorithms/literature%20reviews/beginners-guide-object-detection/</id>
			<title>A Beginner's Guide to Object Detection</title>
			<link href="http://localhost:4000//algorithms/literature%20reviews/beginners-guide-object-detection/" rel="alternate" type="text/html" title="A Beginner's Guide to Object Detection" />
			<updated>2019-09-01T00:00:00-04:00</updated>

			
				
				<author>
					
						<name>KFessel</name>
					
					
					
				</author>
			
			<summary>&lt;em&gt;This post covers the basics of object detection: what it is, various approaches to it, the measurements used to judge its results, along with a few important considerations of modern object detection.&lt;/em&gt;</summary>
			<content type="html" xml:base="http://localhost:4000//algorithms/literature%20reviews/beginners-guide-object-detection/">&lt;p&gt;Computer vision refers to the process by which computers interpret information from digital images or videos. While humans can quickly determine what items are present in a photograph and where those items are located, computers must be trained to do so, often with massive amounts of images and corresponding object labels. This task, called &lt;em&gt;object detection&lt;/em&gt;, was considered incredibly challenging just a few years ago, but recent developments in deep learning, specifically convolutional neural networks (CNNs), have substantially improved computers’ ability to successfully locate and identify objects.&lt;/p&gt;

&lt;p&gt;Please continue to the &lt;a href=&quot;https://www.thisismetis.com/blog/a-beginners-guide-to-object-detection&quot;&gt;Metis blog&lt;/a&gt; to read my full post covering the basics of object detection.&lt;/p&gt;

</content>

			
				<category term="algorithms" />
			
				<category term="literature reviews" />
			
			

			<published>2019-09-01T00:00:00-04:00</published>
		</entry>
	
		<entry>
			<id>http://localhost:4000//visualizations/matplotlib-improvements/</id>
			<title>Simple Ways to Improve Your Matplotlib</title>
			<link href="http://localhost:4000//visualizations/matplotlib-improvements/" rel="alternate" type="text/html" title="Simple Ways to Improve Your Matplotlib" />
			<updated>2019-08-12T00:00:00-04:00</updated>

			
				
				<author>
					
						<name>KFessel</name>
					
					
					
				</author>
			
			<summary>&lt;em&gt;Matplotlib's default properties often yield unappealing plots that can be off-putting to many users.  This post offers several simple ways to improve upon these defaults and help spruce up basic Matplotlib visualizations.&lt;/em&gt;</summary>
			<content type="html" xml:base="http://localhost:4000//visualizations/matplotlib-improvements/">&lt;!--more--&gt;

&lt;p&gt;&lt;a href=&quot;https://matplotlib.org/&quot;&gt;Matplotlib&lt;/a&gt; is typically the first data visualization package that Python programmers learn.  While its users can create basic figures with just a few lines of code, these resulting default plots often prove insufficient in both design aesthetics and communicative power.  Simple adjustments can lead to dramatic improvements, however, and in this post, I will share several tips on how to upgrade your Matplotlib figures.&lt;/p&gt;

&lt;p&gt;In the examples that follow, I will be using information found in &lt;a href=&quot;https://www.kaggle.com/crawford/80-cereals&quot;&gt;this Kaggle dataset about cereals&lt;/a&gt;.  I have normalized three features (calories, fat, and sugar) by serving size to better compare cereal nutrition and ratings.  Details about these data transformations and the code used to generate each example figure can be found on &lt;a href=&quot;https://github.com/kimfetti/Blog/blob/master/matplotlib_improvements.ipynb&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;remove-spines&quot;&gt;Remove Spines&lt;/h2&gt;

&lt;p&gt;The first Matplotlib default to update is that black box surrounding each plot, comprised of four so-called “spines.”  To adjust them we first &lt;a href=&quot;https://matplotlib.org/3.1.1/api/_as_gen/matplotlib.pyplot.gca.html&quot;&gt;get our figure’s axes&lt;/a&gt; via pyplot and then change the visibility of each individual spine as desired.&lt;/p&gt;

&lt;p&gt;Let’s say, for example, we want to remove the top and right spines.  If we have imported Matplotlib’s pyplot submodule with:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;matplotlib&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pyplot&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;we just need to add the following to our code:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gca&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;spines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'top'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_visible&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gca&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;spines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'right'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_visible&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;and the top and right spines will no longer appear.  Removing these distracting lines allows more focus to be directed toward your data.&lt;/p&gt;

&lt;center&gt;
&lt;img src=&quot;https://kimfetti.github.io/images/spines.png&quot; alt=&quot;Remove matplotlib spines&quot; width=&quot;800&quot; /&gt;
&lt;p&gt;&lt;em&gt;Removing distracting spines can help people focus on your data.&lt;/em&gt;&lt;/p&gt;
&lt;/center&gt;

&lt;h2 id=&quot;explore-color-options&quot;&gt;Explore Color Options&lt;/h2&gt;

&lt;p&gt;Matplotlib’s &lt;a href=&quot;https://matplotlib.org/3.1.1/users/dflt_style_changes.html#colors-color-cycles-and-color-maps&quot;&gt;default colors just got an upgrade&lt;/a&gt; but you can still easily change them to make your plots more attractive or even to reflect your company’s brand colors.&lt;/p&gt;

&lt;h3 id=&quot;hex-codes&quot;&gt;Hex Codes&lt;/h3&gt;

&lt;p&gt;One of my favorite methods for updating Matplotlib’s colors is directly passing &lt;a href=&quot;https://htmlcolorcodes.com/&quot;&gt;hex codes&lt;/a&gt; into the color argument because it allows me to be extremely specific about my color choices.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scatter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'#0000CC'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://www.w3schools.com/colors/colors_picker.asp&quot;&gt;This handy tool&lt;/a&gt; can help you select an appropriate hex color by testing it against white and black text as well as comparing several lighter and darker shades.  Alternatively, you can take a more scientific approach when choosing your palette by checking out &lt;a href=&quot;http://vrl.cs.brown.edu/color&quot;&gt;Colorgorical&lt;/a&gt; by Connor Gramazio from the Brown Visualization Research Lab.  The Colorgorical tool allows you to build a color palette by balancing various preferences like human perceptual difference and aesthetic pleasure.&lt;/p&gt;

&lt;h3 id=&quot;xkcd-colors&quot;&gt;xkcd Colors&lt;/h3&gt;

&lt;p&gt;The &lt;a href=&quot;https://xkcd.com/color/rgb/&quot;&gt;xkcd color library&lt;/a&gt; provides another great way to update Matplotlib’s default colors.  These 954 colors were specifically curated and named by several hundred thousand participants of the &lt;a href=&quot;https://blog.xkcd.com/2010/05/03/color-survey-results/&quot;&gt;xkcd color name survey&lt;/a&gt;.  You can use them in Matplotlib by prefixing their names with “xkcd:”.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scatter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'xkcd:lightish blue'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;center&gt;
&lt;img src=&quot;https://kimfetti.github.io/images/color.png&quot; alt=&quot;Explore matplotlib colors&quot; width=&quot;900&quot; /&gt;
&lt;p&gt;&lt;em&gt;Matplotlib's default colors can easily be updated by passing hex codes or referencing the xkcd library.&lt;/em&gt;&lt;/p&gt;
&lt;/center&gt;

&lt;h2 id=&quot;layer-graph-objects&quot;&gt;Layer Graph Objects&lt;/h2&gt;

&lt;p&gt;Matplotlib allows users to layer multiple graphics on top of each other, which proves convenient when comparing results or setting baselines.  Two useful properties should be utilized while layering: 1) &lt;code class=&quot;highlighter-rouge&quot;&gt;alpha&lt;/code&gt; for controlling each component’s opacity and 2) &lt;code class=&quot;highlighter-rouge&quot;&gt;zorder&lt;/code&gt; for moving objects to the foreground or background.&lt;/p&gt;

&lt;h3 id=&quot;opacity&quot;&gt;Opacity&lt;/h3&gt;

&lt;p&gt;The alpha property in Matplotlib adjusts an object’s opacity.  This value ranges from zero to one with zero being fully transparent (invisible 👀) and one being entirely opaque.  Reducing alpha will make your plot objects see-through, allowing multiple layers to be seen at once as well as allowing overlapping points to be distinguished, say, in a scatter plot.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scatter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alpha&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;center&gt;
&lt;img src=&quot;https://kimfetti.github.io/images/alpha.png&quot; alt=&quot;Adjust matplotlib opacity&quot; width=&quot;800&quot; /&gt;
&lt;p&gt;&lt;em&gt;Decreasing alpha reduces opacity and can help you visualize overlapping points.&lt;/em&gt;&lt;/p&gt;
&lt;/center&gt;

&lt;h3 id=&quot;order&quot;&gt;Order&lt;/h3&gt;

&lt;p&gt;Matplotlib’s zorder property determines how close objects are to the foreground.  Objects with smaller zorder values appear closer to the background, while those with larger values present closer to the front.  If I’m making a scatter plot with an accompanying line plot, for example, I can bring the line forward by increasing its zorder.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scatter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;zorder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;#background&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;zorder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;     &lt;span class=&quot;c&quot;&gt;#foreground&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;center&gt;
&lt;img src=&quot;https://kimfetti.github.io/images/zorder.png&quot; alt=&quot;Control layer order with zorder&quot; width=&quot;600&quot; /&gt;
&lt;p&gt;&lt;em&gt; Plot objects can be brought to the foreground or pushed to the background by adjusting zorder.&lt;/em&gt;&lt;/p&gt;
&lt;/center&gt;

&lt;h2 id=&quot;annotate-main-points-or-examples&quot;&gt;Annotate Main Points or Examples&lt;/h2&gt;

&lt;p&gt;Many visuals can benefit from the annotation of main points or specific, illustrative examples because these directly convey ideas and boost the validity of results.  To add text to a Matplotlib figure, just include annotation code specifying the desired text and its location.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;annotate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TEXT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X_POSITION&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Y_POSITION&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The cereal dataset used to produced this blog’s visuals contains nutritional information about several brand name cereals along with a feature labeled as “rating.”  One might firstly assume that “rating” is a score indicating cereals that consumers prefer.  In the zorder figure above, however, I built a quick linear regression model showing that the correlation between calories per cup and rating is practically non-existent.  It seems unlikely that calories would not factor into consumer preference, so we may already be skeptical about our initial assumption about “rating.”&lt;/p&gt;

&lt;p&gt;This misconception becomes even more obvious when examining the extremes: Cap’n Crunch is the lowest rated cereal while All-Bran with Extra Fiber rates the highest.  Annotating the figure with these representative examples immediately dispels false assumptions about “rating.”  This rating information more likely indicates a cereal’s nutritional value. (I have also annotated the cereal with the most calories per cup; Grape Nuts is likely not meant to be consumed in such large quantities! 😆)&lt;/p&gt;

&lt;center&gt;
&lt;img src=&quot;https://kimfetti.github.io/images/annotate.png&quot; alt=&quot;Annotate examples&quot; width=&quot;700&quot; /&gt;
&lt;p&gt;&lt;em&gt; Annotating your visuals with a few examples can improve communication and add legitimacy.&lt;/em&gt;&lt;/p&gt;
&lt;/center&gt;

&lt;h2 id=&quot;baseline-and-highlight&quot;&gt;Baseline and Highlight&lt;/h2&gt;

&lt;p&gt;Adding a baseline to your visuals helps set expectations.  A simple horizontal or vertical line provides others with appropriate context and often speeds along their understanding of your results.  Highlighting a specific region of interest, meanwhile, can further emphasize your conclusions and also facilitates communication with your audience.  Matplotlib offers several options for baselining and highlighting, including horizontal and vertical lines, shapes such as rectangles, horizontal and vertical span shading, and filling between two lines.&lt;/p&gt;

&lt;h3 id=&quot;horizontal-and-vertical-lines&quot;&gt;Horizontal and Vertical Lines&lt;/h3&gt;

&lt;p&gt;Let’s now consider the interplay between fat and sugar in our cereal dataset.  A basic scatter plot of this relationship doesn’t appear interesting at first, but after exploring further, we find the median fat per cup of cereal is just one gram because so many cereals contain no fat at all.  Adding this baseline helps people arrive at this finding much more quickly.&lt;/p&gt;

&lt;center&gt;
&lt;img src=&quot;https://kimfetti.github.io/images/baseline.png&quot; alt=&quot;Add a baseline&quot; width=&quot;800&quot; /&gt;
&lt;p&gt;&lt;em&gt; A horizontal or vertical baseline can help set the stage for your data.&lt;/em&gt;&lt;/p&gt;
&lt;/center&gt;

&lt;p&gt;In other cases you may want to completely remove the default x- and y-axes that Matplotlib provides and create your own axes based on some data aggregate.  This process requires three key steps: 1) remove all default spines, 2) remove tick marks, and 3) add new axes as horizontal and vertical lines.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#1. Remove spines&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;spine&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gca&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;spines&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;spine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_visible&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;#2. Remove ticks&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xticks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;yticks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([])&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;#3. Add horizontal and vertical lines&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;axhline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Y_POSITION&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;#horizontal line&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;axvline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X_POSITION&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;#vertical line&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;center&gt;
&lt;img src=&quot;https://kimfetti.github.io/images/new_axes.png&quot; alt=&quot;Create new axes&quot; width=&quot;550&quot; /&gt;
&lt;p&gt;&lt;em&gt; You can also create new axes for your data by removing spines and ticks and adding custom lines.&lt;/em&gt;&lt;/p&gt;
&lt;/center&gt;

&lt;h3 id=&quot;rectangle&quot;&gt;Rectangle&lt;/h3&gt;

&lt;p&gt;Now that we have plotted the cereals’ fat and sugar contents on new axes, it appears that very few cereals are low in sugar but high in fat.  That is, the upper-left quadrant is nearly empty.  This seems reasonable because cereals typically are not savory.  To make this point abundantly clear, we could direct attention to this low-sugar, high-fat area by drawing a rectangle around it and annotating.  Matplotlib provides access to several shapes through its &lt;a href=&quot;https://matplotlib.org/3.1.1/api/patches_api.html#module-matplotlib.patches&quot;&gt;patches module&lt;/a&gt;, including a rectangle or even a &lt;a href=&quot;https://matplotlib.org/3.1.1/gallery/shapes_and_collections/dolphin.html#sphx-glr-gallery-shapes-and-collections-dolphin-py&quot;&gt;dolphin&lt;/a&gt;.  Begin by importing code for the rectangle:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;matplotlib.patches&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Rectangle&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Then to create a rectangle on the figure, grab the current axes and add a rectangular patch with its location, width, and height:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gca&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_patch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Rectangle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X_POSITION&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Y_POSITION&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WIDTH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HEIGHT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Here, the x- and y-positions refer to the placement of the lower-left corner of the rectangle.&lt;/p&gt;

&lt;center&gt;
&lt;img src=&quot;https://kimfetti.github.io/images/rectangle.png&quot; alt=&quot;Add a rectangle&quot; width=&quot;600&quot; /&gt;
&lt;p&gt;&lt;em&gt; To direct people toward a particular part of your visual, consider adding a rectangle.&lt;/em&gt;&lt;/p&gt;
&lt;/center&gt;

&lt;h3 id=&quot;shading&quot;&gt;Shading&lt;/h3&gt;

&lt;p&gt;Shading provides an alternative option for drawing attention to a particular region of your figure, and there are a few ways to add shading with Matplotlib.&lt;/p&gt;

&lt;p&gt;If you intend to highlight an entire horizontal or vertical area, just layer a span into your visual:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;axhspan&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Y_START&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Y_END&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;#horizontal shading&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;axvspan&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X_START&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;X_END&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;#vertical shading&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Previously discussed properties like &lt;code class=&quot;highlighter-rouge&quot;&gt;alpha&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;zorder&lt;/code&gt; are critical here because you will likely want to make your shading transparent and/or move it to the background.&lt;/p&gt;

&lt;center&gt;
&lt;img src=&quot;https://kimfetti.github.io/images/shading.png&quot; alt=&quot;Shading for highlighting&quot; width=&quot;800&quot; /&gt;
&lt;p&gt;&lt;em&gt; Shading also provides an effective way to highlight a particular region of your plot.&lt;/em&gt;&lt;/p&gt;
&lt;/center&gt;

&lt;p&gt;If the area you would like to shade follows more complicated logic, however, you may instead &lt;a href=&quot;https://matplotlib.org/api/_as_gen/matplotlib.pyplot.fill_between.html&quot;&gt;shade between two user-defined lines&lt;/a&gt;.  This approach takes a set of x-values, two sets of y-values for the first and second lines, and an optional &lt;code class=&quot;highlighter-rouge&quot;&gt;where&lt;/code&gt; argument that allows you to use logic to filter down to your region of interest.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gca&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fill_between&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X_VALUES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Y_LINE1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Y_LINE2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WHERE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FILTER&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LOGIC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;To shade the same area that was previously highlighted with a rectangle, simply define an array of equally spaced sugar values for the x-axis, fill between the median and max fat values on the y-axis (high fat), and filter down to sugar values less than the median (low sugar).&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;sugars&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;linspace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sugars_per_cup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sugars_per_cup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gca&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fill_between&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sugars&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fat_per_cup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;median&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fat_per_cup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; 
                       &lt;span class=&quot;n&quot;&gt;WHERE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sugars&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sugars_per_cup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;median&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;center&gt;
&lt;img src=&quot;https://kimfetti.github.io/images/fill_between.png&quot; alt=&quot;Fill between lines&quot; width=&quot;600&quot; /&gt;
&lt;p&gt;&lt;em&gt; More complex shading logic is accomplished by filling between two lines and applying a filter.&lt;/em&gt;&lt;/p&gt;
&lt;/center&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Matplotlib often gets a bad reputation due to its poor defaults and the shear amount of code needed to produce decent looking visuals.  Hopefully, the tips provided in this blog will help you address the first issue, though I’ll admit that the final few example figures required many updates and subsequently a sizable amount of code.  If the required bulk of code bothers you, the &lt;a href=&quot;https://seaborn.pydata.org/&quot;&gt;Seaborn&lt;/a&gt; visualization library is an excellent alternative to Matplotlib.  It comes with better defaults overall, demands fewer lines of code, and supports customization via traditional Matplotlib syntax if needed.&lt;/p&gt;

&lt;p&gt;The main thing to keep in mind when you visualize data–no matter which package you choose–is your audience.  The suggestions I’ve offered here aim to smooth out the data communication process by 1) removing extraneous bits like unnecessary spines or tick marks, 2) telling the data story quicker by setting expectations with layering and baselines, and 3) highlighting main conclusions with shading and annotations.  The resulting aesthetics also improve, but the primary goal is stronger and more seamless data communication.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;I recently shared content similar to this in a data visualization talk at &lt;a href=&quot;https://odsc.com/training/portfolio/custom-data-visualizations-with-python/&quot;&gt;ODSC NYC&lt;/a&gt;.  You can access my original conference materials as well as the code that powers each example figure in the links below.&lt;/em&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/kimfetti/Blog/blob/master/matplotlib_improvements.ipynb&quot;&gt;Check out this code on GitHub!&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;http://bit.ly/odscNyc19_dataviz&quot;&gt;Check out my ODSC conference materials with Google Colab!&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

</content>

			
				<category term="visualizations" />
			
			

			<published>2019-08-12T00:00:00-04:00</published>
		</entry>
	
		<entry>
			<id>http://localhost:4000//mathematics/visualizations/planetary-birthday-problem/</id>
			<title>Solving the Birthday Problem on Mars</title>
			<link href="http://localhost:4000//mathematics/visualizations/planetary-birthday-problem/" rel="alternate" type="text/html" title="Solving the Birthday Problem on Mars" />
			<updated>2018-12-10T00:00:00-05:00</updated>

			
				
				<author>
					
						<name>KFessel</name>
					
					
					
				</author>
			
			<summary>&lt;em&gt;The birthday problem is a classic probability question with a surprising result.  In this post, we will solve this puzzler and extend the result by considering the answer for every planet in our solar system.&lt;/em&gt;</summary>
			<content type="html" xml:base="http://localhost:4000//mathematics/visualizations/planetary-birthday-problem/">&lt;!--more--&gt;

&lt;p&gt;I was recently asked to develop a challenge problem for the &lt;a href=&quot;https://www.thisismetis.com&quot;&gt;Metis&lt;/a&gt; data science bootcamp.  Perhaps it was my background in math or maybe my penchant for mild torture, but I decided to have students answer a few exercises from &lt;a href=&quot;https://www.amazon.com/Challenging-Problems-Probability-Solutions-Mathematics-ebook/dp/B00A3M0VV8&quot;&gt;Fifty Challenging Problems with Solutions&lt;/a&gt; by Mosteller.  This book is full of classic problems in probability, and I highly recommend it to anyone prepping for data science interviews!&lt;/p&gt;

&lt;p&gt;One of my favorite sections in this book is the birthday series, which includes a version of the birthday problem.  This problem is about as famous as a probability question can get.  It has been featured on &lt;a href=&quot;https://www.npr.org/templates/story/story.php?storyId=4542341&quot;&gt;NPR&lt;/a&gt;, written about in an &lt;a href=&quot;https://en.wikipedia.org/wiki/A_Fall_of_Moondust&quot;&gt;Arthur C. Clarke novel&lt;/a&gt;, and it even has its &lt;a href=&quot;https://en.wikipedia.org/wiki/Birthday_problem&quot;&gt;own Wikipedia page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The problem goes something along the lines of:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;span class=&quot;teaser&quot;&gt;You are throwing a party and inviting random people you have never met. What’s the fewest number of &lt;br /&gt; people you need to invite to have at least 50% probability that two strangers will have the same birthday? &lt;br /&gt;(Birth year need not match.)&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you haven’t solved this one before, feel free to take a moment and give it a shot.  Be warned – &lt;strong&gt;spoilers ahead&lt;/strong&gt;!&lt;/p&gt;

&lt;h2 id=&quot;solving-with-probability&quot;&gt;Solving with Probability&lt;/h2&gt;

&lt;p&gt;Rather than the brute force approach, it turns out that the answer can be found much more easily by considering the complementary case; that is, “How many people can you invite to expect a 50% chance that all invited people have &lt;em&gt;unique&lt;/em&gt; birthdays?”  This “unsuccessful” probability along with the “successful” probability will sum to one.&lt;/p&gt;

&lt;p&gt;Keeping the complementary case in mind, note that the first person at your party can have their birthday on any calendar day, but after that, each person must have a different day.  Let \(p_u\) be the probability that \(r\) people each have unique birthdays. We find
\[p_u = 1 \cdot \frac{N-1}{N} \cdot \frac{N-2}{N} \cdots \frac{N-r+1}{N} = \frac{N!}{(N-r)!N^r}\]
where \(N\) is the number of days in one year.&lt;/p&gt;

&lt;p&gt;Backtracking to the original birthday problem, we now just need to find the minimum value of \(r\) people that satisfy:
\[p_{s} = 1 - \frac{N!}{(N-r)!N^r} &amp;gt; \frac{1}{2}.\]&lt;/p&gt;

&lt;p&gt;This expression doesn’t look all that pleasant to be solved outright, so instead we can build a little solver in Python--or the language of your choice!--to be able to compute \(p_s\) for any given \(r\) and \(N\).&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;def prob_birthday_success(r, N=365):
    if r &amp;gt; N: 
        return 1.
    factorial = reduce(lambda x, y: x*y, range(N-r+1, N+1))
    power = N**r
    return (1 - factorial/power)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;We steadily increase \(r\) and once we hit the \(p_s \geq \frac{1}{2}\) mark, we have our desired party size.  The table below illustrates solutions for 50% probability as well as a few others values of \(p_s\).&lt;/p&gt;

&lt;center&gt;
&lt;table width=&quot;400&quot;&gt;
  &lt;caption&gt;Party size required for several success probabilities&lt;/caption&gt;
  &lt;colgroup&gt;
    &lt;col span=&quot;1&quot; style=&quot;width: 50%;&quot; /&gt;
    &lt;col span=&quot;1&quot; style=&quot;width: 50%;&quot; /&gt;
  &lt;/colgroup&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Probability&lt;/th&gt;
      &lt;th&gt;People Required&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;0.05&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0.1&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0.25&lt;/td&gt;
      &lt;td&gt;15&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0.5&lt;/td&gt;
      &lt;td&gt;23&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0.75&lt;/td&gt;
      &lt;td&gt;32&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0.9&lt;/td&gt;
      &lt;td&gt;41&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0.999&lt;/td&gt;
      &lt;td&gt;70&lt;/td&gt;
    &lt;/tr&gt;
   &lt;/tbody&gt;
&lt;/table&gt;
&lt;/center&gt;

&lt;p&gt;Notice that if we invite just 23 people to our party, we will have a 50-50 chance in finding a shared birthday.  Inviting 60 or 70 people pretty much guarantees it.  Incredible!&lt;/p&gt;

&lt;p&gt;So it’s plain to see that \(p_s\) increases rapidly as our party gets bigger here on Earth, but this led me to consider: “What would happen if the party took place on, say, Mars or Jupiter?”  Or in less whimsical terms: “How many people would we need if we varied the year length, \(N\)?”&lt;/p&gt;

&lt;h2 id=&quot;planetary-results&quot;&gt;Planetary Results&lt;/h2&gt;

&lt;p&gt;The first step in solving the birthday problem for the rest of our solar system is gathering &lt;a href=&quot;https://www.universetoday.com/37507/years-of-the-planets/&quot;&gt;year lengths for each planet&lt;/a&gt;, which vary wildly: from a meager 88 days on Mercury up to a whopping 60,182 days on Neptune.  In fact, your entire life will be confined to a single orbital period of Neptune.  There goes that Neptunian birthday party you’ve always wanted!  (Admittedly, the definition of a “birthday” gets a little murky on these other planets…  but more on this later.)&lt;/p&gt;

&lt;p&gt;Once year lengths have been gathered, working out the problem for different values of \(N\) is as simple as returning to the Python function introduced earlier.  The required number of party goers to achieve a 50% probability of birthday matching on each planet can be found below.  As a child of the 80s, I must tell you it is &lt;em&gt;VERY&lt;/em&gt; difficult for me to not include Pluto on this chart.  But there’s always hope for a &lt;a href=&quot;https://www.space.com/40550-pluto-planet-debate-flares-up-again.html&quot;&gt;Plutonian comeback&lt;/a&gt;! 🙏&lt;/p&gt;

&lt;center&gt;
&lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; align=&quot;center&quot; width=&quot;1050&quot; height=&quot;500&quot; src=&quot;https://public.tableau.com/views/PlanetaryBirthdayProblem/Planets-50?:showVizHome=no&amp;amp;:embed=true&quot;&gt; &lt;/iframe&gt;
&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Even on Neptune where there are over 60,000 Earth days per year, we only require 290 people to have a 50% chance of matching birthdays.  That’s an amazingly small amount for such a massive number of days in each year!&lt;/p&gt;

&lt;p&gt;So now back to our broader question: “What’s the overall trend as \(N\) increases?”  Well, the chart above is great for being able to read information associated with every planet, but it’s a bit misleading trendwise because both axes are on a log scale.  Let’s take a look at this same information without the axial scaling.&lt;/p&gt;

&lt;center&gt;
&lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; align=&quot;center&quot; width=&quot;700&quot; height=&quot;400&quot; src=&quot;https://public.tableau.com/views/PlanetaryBirthdayProblem/Planets-50-Trueaxes?:showVizHome=no&amp;amp;:embed=true&quot;&gt; &lt;/iframe&gt;
&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Ah ha!  Viewing the data this way, a trend that looks roughly like a power relationship emerges.  We will now take a closer look at the analytic expression for \(p_s\) to dive deeper into this relation.&lt;/p&gt;

&lt;h2 id=&quot;expanding-solution-with-approximations&quot;&gt;Expanding Solution with Approximations&lt;/h2&gt;

&lt;p&gt;We are about to embark upon the amazing world of expansions and approximations--AKA put your math pants on and fasten your seat belts!  (If this sort of nerdout isn’t your thing, no worries.  Just skip ahead to the end of this section where all will revealed… 🔮  Much of this work can also be found in &lt;a href=&quot;https://www.amazon.com/Challenging-Problems-Probability-Solutions-Mathematics-ebook/dp/B00A3M0VV8&quot;&gt;Mosteller&lt;/a&gt; as his solution to the birthday problem.)&lt;/p&gt;

&lt;p&gt;First recall that 
\[e^{-x} = 1 - x + \frac{x^2}{2!} - \frac{x^3}{3!}+ \cdots,\]
so ultimately, \(e^{-x} \approx 1 - x\) for very small values of \(x\).&lt;/p&gt;

&lt;p&gt;Now represent \(p_u\)--that’s the unsuccessful probability--as
\[p_u = \frac{N(N-1)(N-2)\cdots(N-r+1)}{N^r} = \frac{N^r - \hat{k}}{N^r} = 1 - \frac{k}{N}\]
where \(k\) contains multiple factors but all are smaller than \(N\).&lt;/p&gt;

&lt;p&gt;Combining these two expressions, we then find that
\[p_u = 1 - \frac{k}{N} \approx e^{-k/N},\]
which is valid because \(k/N\) is typically much smaller than one.&lt;/p&gt;

&lt;p&gt;Now let’s further consider the values contained within \(k\).  Expanding out the numerator in \(p_u\), we have
\[p_u=\frac{N(N-1)\cdots(N-r+1)}{N^r} = \frac{N^r - N^{r-1}\left[0+1+2+\cdots(r-1)\right] + \cdots}{N^r} = 1 - \frac{0 + 1 + 2 + \cdots (r-1)}{N} + \cdots.\]
The quantity \(k\) represents several terms, but to leading order, it just looks a sum of the integers between 0 and \(r-1\).  More specificially,
\[k \approx 0 + 1 + 2 + \cdots + r-1 = \sum_{i=0}^{r-1}j = \frac{r(r-1)}{2}.\]
So where does this lead us?  Returning to our exponential expression above, we have
\[p_u \approx e^{-k/N} \approx e^{-r(r-1)/2N},\]
which looks &lt;em&gt;much&lt;/em&gt; more tractable than the original expression we had for \(p_u\) containing those factorials.  We can even come up with an expression to relate \(r\) to \(N\) more explicitly in the leading order.&lt;/p&gt;

&lt;p&gt;Subbing in \(p_u = 1 - p_s\) and taking the natural log of each side, we eventually find
\[\frac{r(r-1)}{2N} \approx -\ln{(1 - p_s)},\]
which means
\[r(r-1) \approx -2N\ln{(1-p_s)}.\]
So there you have it!  Selecting in any given value for \(p_s\) will fix the log factor and the other two quantities are related as
\[\mathcal{O}\left(r\right) \sim \mathcal{O}\left(\sqrt{N}\right).\]
The trend we saw in the planet chart was indeed a power relationship; specifically, \(r\) goes like \(\sqrt{N}\) as \(N\) increases for the birthday problem.  This means that even on planets with many, many days in a year, we don’t really need to increase our party size by all that much to ensure our 50-50 chance of finding birthday twins.&lt;/p&gt;

&lt;h2 id=&quot;approximation-in-action&quot;&gt;Approximation in Action&lt;/h2&gt;
&lt;p&gt;How good is this approximation in practice?  Well, the trendline we saw earlier in the true-scale axes chart was auto-fitted in Tableau with a power trend, and indeed, the equation for the resulting line was found to be&lt;/p&gt;

&lt;p&gt;\[r = 1.28548 \cdot N^{0.491503}\]&lt;/p&gt;

&lt;p&gt;So our square-root relationship appears to hold true.&lt;/p&gt;

&lt;p&gt;We can also more explicitly consider what happens as \(N\) gets larger. Because we are estimating
\[1-\frac{k}{N} \approx e^{-k/N},\]
this approximation should actually become &lt;em&gt;more&lt;/em&gt; valid as \(N\) becomes larger since \(k/N\) will resultingly grow smaller.&lt;/p&gt;

&lt;p&gt;Now set \(p_s = \frac{1}{2}\) and let \(r_{1/2}\) be the 50-50 chance party size. Plotting the left-hand side of our approximation
\[\frac{r_{1/2}(r_{1/2}-1)}{2N} \approx \ln{2}\]
for various evenly sampled values of \(N\), we see in the figure below that this estimation indeed becomes more valid and encounters less variance about \(\ln{(2)}\) as \(N \to \infty\).  (There is an added layer of complexity in this problem, however, because we require \(r_{1/2}\) to be an integer; this stipulation makes our approximation dance about the line a bit even at large values of \(N\).)&lt;/p&gt;

&lt;center&gt;
&lt;img src=&quot;https://kimfetti.github.io/images/planetary-birthday-approx.png&quot; alt=&quot;Approximation plot&quot; width=&quot;900&quot; height=&quot;400&quot; /&gt;
&lt;/center&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;The birthday problem is a classic that has been examined from several different angles.  I hope you’ve enjoyed this planetary rendition and the subsequent deep dive into analytic approximations to explore how \(r\) is related to year length.&lt;/p&gt;

&lt;p&gt;A few final thoughts:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;It is well-known that birthdays are &lt;a href=&quot;http://www.panix.com/~murphy/bday.html&quot;&gt;not equally distributed throughout all 365 days&lt;/a&gt;, especially if you focus on one region of the world.  So how does non-uniformity affect our birthday solution?&lt;/p&gt;

    &lt;p&gt;It turns out that the uniform distribution of birthdays we used throughout this post is actually a &lt;a href=&quot;https://www.jstor.org/stable/2318556?seq=1#page_scan_tab_contents&quot;&gt;worst-case scenario&lt;/a&gt; in terms of successfully finding birthmates.  If birthdays are skewed toward one day or another, the odds that you will find birthday twins at your party actually increase… but not significantly.  Attempts at calculating the birthday problem with real-world datasets have shown the 23-person group to be a pretty consistent solution, even when considering &lt;a href=&quot;https://www.stat.wisc.edu/techreports/tr591.pdf&quot;&gt;non-uniform distributions&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;I eluded to this earlier, but the idea of a “birthday” gets a bit complicated when thinking about other planets.  I often mentioned my findings in terms of “Earth days” because I calculated each planet’s revolution about the Sun in the number of times it takes Earth to rotate about its own axis.  What does that mean in the context of this problem?&lt;/p&gt;

    &lt;p&gt;Consider two cases: Jupiter and Mercury.&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;Firstly, Jupiter rotates about its own axis in about &lt;a href=&quot;https://www.universetoday.com/37507/years-of-the-planets/&quot;&gt;9 hours and 55 minutes&lt;/a&gt;, faster than any other planet in our solar system.  So while Jupiter takes roughly 4,333 Earth days to complete its orbit about the Sun, this actually amounts to 10,476 &lt;em&gt;Jovian&lt;/em&gt; days.  That’s a lot more potential “birthdays!”&lt;/li&gt;
      &lt;li&gt;Mercury, on the other hand, completes a rotation about its axis &lt;em&gt;slower&lt;/em&gt; than any other planet. It takes about 176 Earth days for Mercury to rotate, which is &lt;em&gt;longer&lt;/em&gt; than Mercury’s revolution about the Sun.  Ultimately, a “year” on Mercury is half as long as a “day.”  The birthday problem is completely moot because everyone born in the same Mercurian year is automatically born on the same Mercurian day! (… Please ignore the fact that no one is ever actually born on Mercury. 😆)&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;br /&gt;
 I have chosen to disregard this planetary difference in the definition of a “day” for simplicity, but keeping with the same Python function introduced near the beginning of this post, we could relatively easily compute revised birthday solutions.  Please let me know if you work this out!&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/kimfetti/Blog/blob/master/planetary_birthday_problem.ipynb&quot;&gt;Check out this code on GitHub!&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://public.tableau.com/profile/kimberly.fessel#!/vizhome/PlanetaryBirthdayProblem/Planets-50&quot;&gt;Check out this viz on Tableau!&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

</content>

			
				<category term="mathematics" />
			
				<category term="visualizations" />
			
			

			<published>2018-12-10T00:00:00-05:00</published>
		</entry>
	
</feed>